<h1 id='welcome'>Welcome</h1>
<p>CodeDmx is a Our PHP framework project that want to enable you to develop projects much faster than you could if you were writing code from scratch, by providing a rich set of libraries for commonly needed task.</p>

<p>CodeDmx PHP Framwork can help you if:</p>

<ul>
<li>You want a framework with a small footprint.</li>
<li>You want a framework that requires nearly zero configuration.</li>
<li>You want a framework that does not require you to use the command line.</li>
<li>You want a framework that does not require you to adhere to restrictive coding rules.</li>
<li>You are not interested in large-scale monolithic libraries like PEAR.</li>
<li>You do not want to be forced to learn a templating language (although a template parser is optionally available if you desire one).</li>
<li>You need clear, thorough documentation.</li>
</ul>
<h2 id='server-requirements'>Server Requirements</h2>
<ol>
<li>Web server: Ngnix or Apache (with mod_rewrite)</li>
<li>PHP version 7.0 or newer is required.
It should works on 5.6, but we work with the last version of PHP. (<strong>you need to remove in index file php version condition</strong>)</li>
<li>MySQLi PHP Extension</li>
<li>OpenSSL PHP Extension</li>
<li>Mbstring PHP Extension</li>
</ol>
<h2 id='license'>License</h2>
<p><strong>The MIT License (MIT)</strong></p>

<p>Copyright (c) 2014 - 2017, CodeDMx</p>

<p>Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:</p>

<p>The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.</p>

<p>THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.</p>
<h2 id='installation'>Installation</h2>
<blockquote>
<p>To use database</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="c1">// Modify this global variables on the file db.settings.php located in /application/Config/
</span><span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">db</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'default'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'host'</span> <span class="o">=&gt;</span> <span class="s1">'localhost'</span><span class="p">,</span> <span class="c1">// Required
</span>    <span class="s1">'username'</span> <span class="o">=&gt;</span> <span class="s1">''</span><span class="p">,</span> <span class="c1">// Required
</span>    <span class="s1">'password'</span> <span class="o">=&gt;</span> <span class="s1">''</span><span class="p">,</span> <span class="c1">// Required
</span>    <span class="s1">'db'</span><span class="o">=&gt;</span> <span class="s1">''</span><span class="p">,</span> <span class="c1">// Required
</span>    <span class="s1">'port'</span> <span class="o">=&gt;</span> <span class="mi">3306</span><span class="p">,</span>
    <span class="s1">'charset'</span> <span class="o">=&gt;</span> <span class="s1">'utf8'</span>
  <span class="p">)</span>
<span class="p">);</span>
<span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">host</span> <span class="o">=</span> <span class="s1">''</span><span class="p">;</span>
<span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">db</span> <span class="o">=</span> <span class="s1">''</span><span class="p">;</span>
<span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">usr</span> <span class="o">=</span> <span class="s1">''</span><span class="p">;</span>
<span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">pwd</span> <span class="o">=</span> <span class="s1">''</span><span class="p">;</span>
<span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">port</span> <span class="o">=</span> <span class="mi">3306</span><span class="p">;</span>
<span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">charset</span> <span class="o">=</span> <span class="s1">'utf8'</span><span class="p">;</span>

<span class="c1">// Then, to use on your files
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">load</span><span class="o">-&gt;</span><span class="na">library</span><span class="p">(</span><span class="s1">'db'</span><span class="p">);</span> <span class="c1">#Load db library
</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'username'</span><span class="p">,</span> <span class="s1">'test'</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'password'</span><span class="p">,</span> <span class="nb">md5</span><span class="p">(</span><span class="s1">'password'</span><span class="p">));</span>
<span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_once</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>

<span class="c1">// Or you can auto load db library in CFG.php file
</span><span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">autoload</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">'db'</span><span class="p">);</span>
</code></pre>
<p>CodeDmx is installed really quickly:</p>

<ol>
<li>Unzip the package.</li>
<li>Upload the CodeDmx folders and files to your server.</li>
<li>If you intend to use a database, open the <em>Model/CFG.php</em> file with a text editor and set your database settings.</li>
</ol>

<p>One additional measure to take in production environments is to disable PHP error reporting and any other development-only functionality.  This can be disable in index.php</p>

<p><strong>That&#39;s it!</strong></p>
<h2 id='example'>Example</h2>
<p>When enter on a site, CodeDmx enter to Loader Class, and if exists in View folder, include the file that you called by the URL, for example:</p>

<blockquote>
<p>http://mysite.com/contact/</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="k">include</span> <span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">doc</span> <span class="o">.</span> <span class="s1">'View'</span> <span class="o">.</span> <span class="nx">DS</span> <span class="o">.</span> <span class="nv">$page</span> <span class="o">.</span> <span class="s1">'.php'</span><span class="p">;</span>
</code></pre><h1 id='codedmx-loader-functions'>CodeDmx Loader Functions</h1><h2 id='detect-https'>Detect HTTPS</h2>
<p>This method checks for $_SERVER[&#39;HTTPS&#39;]</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$is_https</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">is_https</span><span class="p">();</span>
<span class="nb">var_dump</span><span class="p">(</span><span class="nv">$is_https</span><span class="p">);</span>
</code></pre><h2 id='detect-ajax'>Detect AJAX</h2>
<p>This method check for $_SERVER[&#39;HTTP_X_REQUESTED_WITH&#39;]</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$is_ajax</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">is_ajax</span><span class="p">();</span>
<span class="nb">var_dump</span><span class="p">(</span><span class="nv">$is_ajax</span><span class="p">);</span>
</code></pre><h2 id='get-client-ip'>Get Client IP</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$ip</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">get_ip</span><span class="p">();</span>
<span class="k">echo</span> <span class="nv">$ip</span><span class="p">;</span>

<span class="c1">// Or include a specific header
</span><span class="nv">$ip</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">get_ip</span><span class="p">(</span><span class="s1">'HTTP_CLIENT_IP'</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$ip</span><span class="p">;</span>
</code></pre><h2 id='detect-mobile'>Detect mobile</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$is_mobile</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">is_mobile</span><span class="p">();</span>
<span class="nb">var_dump</span><span class="p">(</span><span class="nv">$is_mobile</span><span class="p">);</span>
</code></pre><h2 id='get-browser'>Get browser</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$browser</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">know_browser</span><span class="p">();</span>
<span class="k">echo</span> <span class="nv">$browser</span><span class="p">;</span>
</code></pre><h2 id='cut-string'>Cut string</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$string</span> <span class="o">=</span> <span class="s1">'The Fresh Prince of Bel-Air'</span><span class="p">;</span>
<span class="nv">$shorten</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">cut_string</span><span class="p">(</span><span class="nv">$string</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$shorten</span><span class="p">;</span>

<span class="c1">// $add_ellipsis '...' at the end of the string
</span><span class="nv">$shorten</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">cut_string</span><span class="p">(</span><span class="nv">$string</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="nv">$add_ellipsis</span> <span class="o">=</span> <span class="k">FALSE</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$shorten</span><span class="p">;</span>

<span class="c1">// $word_safe to cut or not in the middle
</span><span class="nv">$shorten</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">cut_string</span><span class="p">(</span><span class="nv">$string</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="nv">$add_ellipsis</span> <span class="o">=</span> <span class="k">FALSE</span><span class="p">,</span> <span class="nv">$word_safe</span> <span class="o">=</span> <span class="k">TRUE</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$shorten</span><span class="p">;</span>
</code></pre><h2 id='create-id'>Create id</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">create_id</span><span class="p">();</span>
<span class="c1">// Gives: 1412512123
</span></code></pre><h2 id='validate-email-address'>Validate email address</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$isValid</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate_email</span><span class="p">(</span><span class="s2">"user@gmail.com"</span><span class="p">);</span>
<span class="nb">var_dump</span><span class="p">(</span><span class="nv">$isValid</span><span class="p">);</span>
<span class="c1">// outputs: true (bool)
</span></code></pre><h2 id='generate-random-string'>Generate random string</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">random_string</span><span class="p">();</span>
<span class="c1">// outputs: ioj12038
</span>
<span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">random_string</span><span class="p">(</span><span class="mi">16</span><span class="p">);</span>
<span class="c1">// outputs: 12j3091j20930sd1
</span></code></pre><h2 id='get-current-url'>Get current URL</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">get_current_URL</span><span class="p">();</span>
<span class="c1">// outputs: http://mydomain.com
</span></code></pre><h2 id='crypt-string'>Crypt string</h2>
<blockquote>
<p>You need to determinate the encryption keys and encryption method on CFG.php file</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">emethod</span> <span class="o">=</span> <span class="s1">''</span><span class="p">;</span> <span class="c1">// AES-256-CBC | aes-128-cbc, AES-128-CFB
</span><span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">ekey</span> <span class="o">=</span> <span class="s1">''</span><span class="p">;</span> <span class="c1">//qw1209132j
</span><span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">eiv</span> <span class="o">=</span> <span class="s1">''</span><span class="p">;</span> <span class="c1">// *123+1*23*
</span></code></pre>
<blockquote>
<p>The you can crypt and decrypt strings</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$string</span> <span class="o">=</span> <span class="s1">'password'</span><span class="p">;</span>
<span class="nv">$encrypted</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">crypt_this</span><span class="p">(</span><span class="s1">'encrypt'</span><span class="p">,</span> <span class="nv">$string</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$encrypted</span><span class="p">;</span>

<span class="c1">// Then you can decrypt
</span><span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">crypt_this</span><span class="p">(</span><span class="s1">'decrypt'</span><span class="p">,</span> <span class="nv">$encrypted</span><span class="p">);</span>
</code></pre><h2 id='create-google-analytics-code'>Create Google analytics code</h2>
<blockquote>
<p>You can add your google analytics account id on CFG.php file</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">create_ga</span><span class="p">();</span>
</code></pre><h2 id='compres-page'>Compres page</h2>
<p>Captures output via ob_get_contents(), tries to enable gzip, removes whitespace from captured output and echos back.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">compress_page</span><span class="p">();</span>
<span class="cp">?&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;body&gt;</span>
  <span class="nt">&lt;p&gt;&lt;/p&gt;</span>
  <span class="nt">&lt;div&gt;</span>
    <span class="nt">&lt;div&gt;&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>

<span class="cp">&lt;?php</span>
<span class="c1">// outputs: &lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;/p&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;
</span></code></pre><h1 id='functions-class-cod_functions'>Functions class (COD_Functions)</h1><h2 id='all-this-functions-need-to-load-with-two-options'>All this functions need to load with two options</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">load</span><span class="o">-&gt;</span><span class="na">library</span><span class="p">(</span><span class="s1">'func'</span><span class="p">);</span>
<span class="c1"># Then
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">your_function</span><span class="p">();</span>

<span class="c1">// OR
</span><span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">autoload</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">'func'</span><span class="p">);</span>
</code></pre><h2 id='generating-qr-code'>Generating QR Code</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$qr_code</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">get_qr_code</span><span class="p">(</span><span class="s1">'test'</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$qr_code</span><span class="p">;</span>
<span class="c1">// Gives: &lt;img src="http://chart.apis.google.com/chart?chs=150x150&amp;cht=qr&amp;chl=test" /&gt;
</span></code></pre><h2 id='generating-qr-code-and-adding-html-attributes'>Generating QR code and adding HTML attributes:</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$qr_code</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">get_qr_code</span><span class="p">(</span><span class="s1">'test'</span><span class="p">,</span>
  <span class="nv">$width</span> <span class="o">=</span> <span class="mi">350</span><span class="p">,</span>
  <span class="nv">$height</span> <span class="o">=</span> <span class="mi">350</span><span class="p">,</span>
  <span class="nv">$attributes</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'class'</span> <span class="o">=&gt;</span> <span class="s1">'QRCode'</span>
  <span class="p">)</span>
<span class="p">);</span>
<span class="k">echo</span> <span class="nv">$qr_code</span><span class="p">;</span>
<span class="c1">// Gives: &lt;img src="http://chart.apis.google.com/chart?chs=350x350&amp;cht=qr&amp;chl=test" class="QRCode" /&gt;
</span></code></pre><h2 id='create-simple-link-tag'>Create simple link tag</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$link</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">create_link_tag</span><span class="p">(</span><span class="s1">'google.com'</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$link</span><span class="p">;</span>
<span class="c1">// Gives: &lt;a href="http://google.com"&gt;google.com&lt;/a&gt;
</span></code></pre><h2 id='create-simple-link-tag-with-title'>Create simple link tag with title</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$link</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">create_link_tag</span><span class="p">(</span><span class="s1">'google.com'</span><span class="p">,</span> <span class="s1">'Visit Google'</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$link</span><span class="p">;</span>
<span class="c1">// Gives: &lt;a href="http://google.com" title="Visit Google" &gt;google.com&lt;/a&gt;
</span></code></pre><h2 id='create-simple-link-tag-with-title-and-html-attributes'>Create simple link tag with title and HTML attributes</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$link</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">create_link_tag</span><span class="p">(</span><span class="s1">'google.com'</span><span class="p">,</span> <span class="s1">'Visit Google'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'class'</span> <span class="o">=&gt;</span> <span class="s1">'my_class'</span>
<span class="p">));</span>
<span class="k">echo</span> <span class="nv">$link</span><span class="p">;</span>
<span class="c1">// Gives: &lt;a href="http://google.com" title="Visit Google" class='my_class' &gt;google.com&lt;/a&gt;
</span></code></pre><h2 id='array-to-string'>Array to String</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$array</span> <span class="o">=</span><span class="k">array</span><span class="p">(</span>
    <span class="s1">'foo'</span> <span class="o">=&gt;</span> <span class="s1">'bar'</span><span class="p">,</span>
    <span class="s1">'baz'</span> <span class="o">=&gt;</span> <span class="s1">'qux'</span>
<span class="p">);</span>
<span class="nv">$string</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">array_to_string</span><span class="p">(</span><span class="nv">$array</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$string</span><span class="p">;</span>
<span class="c1">// Gives: foo="bar" baz="qux"
</span></code></pre><h2 id='generate-random-string-2'>Generate random string</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$random</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">random_string</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$random</span><span class="p">;</span>
<span class="c1">// Gives: 10 random character string
</span></code></pre><h2 id='get-locations'>Get Locations</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$location</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">get_location</span><span class="p">();</span>
<span class="k">echo</span> <span class="nv">$location</span><span class="p">;</span>
</code></pre><h2 id='curl'>cURL</h2>
<blockquote>
<p>Simple GET example</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$data</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">curl</span><span class="p">(</span><span class="s1">'https://api.ipify.org'</span><span class="p">);</span>
<span class="nb">var_dump</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>
</code></pre>
<blockquote>
<p>POST Example</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$cURL</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">curl</span><span class="p">(</span><span class="s1">'http://jsonplaceholder.typicode.com/posts'</span><span class="p">,</span> <span class="nv">$method</span> <span class="o">=</span> <span class="s1">'POST'</span><span class="p">,</span> <span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'title'</span> <span class="o">=&gt;</span> <span class="s1">'foo'</span><span class="p">,</span>
    <span class="s1">'body'</span> <span class="o">=&gt;</span> <span class="s1">'bar'</span><span class="p">,</span>
    <span class="s1">'userId'</span> <span class="o">=&gt;</span> <span class="mi">1</span>
<span class="p">));</span>
<span class="nb">var_dump</span><span class="p">(</span><span class="nv">$cURL</span><span class="p">);</span>
</code></pre>
<blockquote>
<p>Custom Headers</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$cURL</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">curl</span><span class="p">(</span><span class="s1">'http://jsonplaceholder.typicode.com/posts'</span><span class="p">,</span> <span class="nv">$method</span> <span class="o">=</span> <span class="s1">'POST'</span><span class="p">,</span> <span class="nv">$data</span> <span class="o">=</span> <span class="k">FALSE</span><span class="p">,</span> <span class="nv">$header</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/json'</span>
<span class="p">),</span> <span class="nv">$return_info</span> <span class="o">=</span> <span class="k">TRUE</span><span class="p">);</span>
<span class="nb">var_dump</span><span class="p">(</span><span class="nv">$cURL</span><span class="p">);</span>
</code></pre><h2 id='get-alexa-rank'>Get Alexa Rank</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$rank</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">get_alexa_rank</span><span class="p">(</span><span class="s1">'github.com'</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$rank</span><span class="p">;</span>
</code></pre><h2 id='get-google-page-rank'>Get Google Page Rank</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$rank</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">get_google_rank</span><span class="p">(</span><span class="s1">'github.com'</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$rank</span><span class="p">;</span>
</code></pre><h2 id='expand-short-url'>Expand Short URL</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$short</span> <span class="o">=</span> <span class="s1">'https://goo.gl/8SbJTG'</span><span class="p">;</span>
<span class="nv">$expand</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">get_short_url</span><span class="p">(</span><span class="nv">$short</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$expand</span><span class="p">;</span>
<span class="c1">// Gives https://github.com/mxra8
</span></code></pre><h2 id='short-url'>Short URL</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$url</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">short_url</span><span class="p">(</span><span class="s1">'https://github.com/mxra8'</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$url</span><span class="p">;</span>
</code></pre><h2 id='embed-an-url'>Embed an url</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$string</span> <span class="o">=</span> <span class="s1">'Need more Pidgey for Eminem "Rap God" in Pokémon GO https://www.youtube.com/watch?v=c7_CcBgZ2e4'</span><span class="p">;</span>
<span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">embed</span><span class="p">(</span><span class="nv">$string</span><span class="p">);</span>
<span class="c1">// outputs:
// Need more Pidgey for Eminem "Rap God" in Pokémon GO&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/c7_CcBgZ2e4?feature=oembed" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
// supported providers are: youtube.com, blip.tv, vimeo.com, dailymotion.com, flickr.com, smugmug.com, hulu.com, revision3.com, wordpress.tv, funnyordie.com, soundcloud.com, slideshare.net and instagram.com
</span></code></pre><h2 id='number-to-word-conversion'>Number To Word conversion</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$number</span> <span class="o">=</span> <span class="s2">"864210"</span><span class="p">;</span>
<span class="nv">$number_in_words</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">func</span><span class="o">-&gt;</span><span class="na">number_to_word</span><span class="p">(</span><span class="nv">$number</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$number_in_words</span><span class="p">;</span>
<span class="c1">// outputs: eight hundred and sixty-four thousand, two hundred and ten
</span></code></pre><h1 id='validator-class-cod_validator'>Validator Class (COD_Validator)</h1>
<p>CodeDmx has a Validator class. This class can help you to validate inputs, form, or data that you sent.</p>

<blockquote>
<p>First of all you need to load class</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">load</span><span class="o">-&gt;</span><span class="na">library</span><span class="p">(</span><span class="s1">'validate'</span><span class="p">);</span>

<span class="c1">//Then
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">sanitize</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">);</span>
</code></pre><h2 id='a-simple-example'>A simple example</h2>
<p>Before to explain this example, let&#39;s to describe the ideal scenario:</p>

<ul>
<li>A form is displayed</li>
<li>The user fill it and submit</li>
</ul>

<p>Runs the validation of the form submited:</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$is_valid</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">is_valid</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'username'</span> <span class="o">=&gt;</span> <span class="s1">'required|alpha_numeric'</span><span class="p">,</span>
  <span class="s1">'password'</span> <span class="o">=&gt;</span> <span class="s1">'required|max_len,100|min_len,6'</span>
<span class="p">));</span>

<span class="k">if</span> <span class="p">(</span><span class="nv">$is_valid</span> <span class="o">===</span> <span class="k">TRUE</span><span class="p">)</span>
<span class="p">{</span>
  <span class="c1">//continue
</span><span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="nb">print_r</span><span class="p">(</span><span class="nv">$is_valid</span><span class="p">);</span>
<span class="p">}</span>
</code></pre><h2 id='available-methods'>Available Methods</h2>
<p>This are all available methods of Validator Class</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="c1">// The short way to validate
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">is_valid</span><span class="p">(</span><span class="k">array</span> <span class="nv">$data</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$rules</span><span class="p">);</span>

<span class="c1">// Get or set the validation rules
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">validation_rules</span><span class="p">(</span><span class="k">array</span> <span class="nv">$rules</span><span class="p">);</span>

<span class="c1">// Get or set the filtering rules
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">filter_rules</span><span class="p">(</span><span class="k">array</span> <span class="nv">$rules</span><span class="p">);</span>

<span class="c1">// Run the filter and validation routines
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">run</span><span class="p">(</span><span class="k">array</span> <span class="nv">$data</span><span class="p">);</span>

<span class="c1">// Strips and encodes unwanted characters
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">xss_clean</span><span class="p">(</span><span class="k">array</span> <span class="nv">$data</span><span class="p">);</span>

<span class="c1">// Sanitizes data and converts strings to UTF-8, this isn't required, but it's safest to do so.
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">sanitize</span><span class="p">(</span><span class="k">array</span> <span class="nv">$input</span><span class="p">);</span>

<span class="c1">// Validates input data according to the provided rules
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">validate</span><span class="p">(</span><span class="k">array</span> <span class="nv">$input</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$rules</span><span class="p">);</span>

<span class="c1">// Filters input data according to the provided filter
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="k">array</span> <span class="nv">$input</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$filter</span><span class="p">);</span>

<span class="c1">// Returns human readable error text in an array or string
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">get_readable_errors</span><span class="p">(</span><span class="nv">$convert_to_string</span> <span class="o">=</span> <span class="kc">false</span><span class="p">);</span>

<span class="c1">// Fetch an array of validation errors indexed by the field names
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">get_errors_array</span><span class="p">();</span>

<span class="c1">// Override field names with readable ones for errors
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">set_field_name</span><span class="p">(</span><span class="nv">$field</span><span class="p">,</span> <span class="nv">$readable_name</span><span class="p">);</span>
</code></pre><h2 id='long-format-example'>Long format example</h2>
<p>Runs the validation of the form submited:</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$_POST</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">sanitize</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">);</span> <span class="c1">// You don't have to do this, but it's safest to do.
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">validation_rules</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
  <span class="s1">'username'</span> <span class="o">=&gt;</span> <span class="s1">'required|alpha_numeric|max_len,20|min_len,6'</span><span class="p">,</span>
  <span class="s1">'password'</span> <span class="o">=&gt;</span> <span class="s1">'required|max_len,100|min_len,6'</span><span class="p">,</span>
  <span class="s1">'email'</span> <span class="o">=&gt;</span> <span class="s1">'required|valid_email'</span>
<span class="p">));</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">filter_rules</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
  <span class="s1">'username'</span> <span class="o">=&gt;</span> <span class="s1">'trim|sanitize_string'</span><span class="p">,</span>
  <span class="s1">'password'</span> <span class="o">=&gt;</span> <span class="s1">'trim'</span><span class="p">,</span>
  <span class="s1">'email'</span> <span class="o">=&gt;</span> <span class="s1">'trim|sanitize_email'</span>
<span class="p">));</span>

<span class="nv">$validated_data</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">run</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">);</span>

<span class="k">if</span> <span class="p">(</span><span class="nv">$validated_data</span> <span class="o">===</span> <span class="k">FALSE</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">get_readable_errors</span><span class="p">(</span><span class="k">TRUE</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="nb">print_r</span><span class="p">(</span><span class="nv">$validated_data</span><span class="p">);</span> <span class="c1">// validation successful
</span><span class="p">}</span>
</code></pre><h2 id='creating-your-own-validators-and-filters'>Creating your own validators and filters</h2>
<p>Adding custom validators and filters is made easy by using callback functions.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="cm">/*
  Create a csutom validation rule named "is_object".
  This callback receives 3 arguments:
  The field to validate, the values being validated, and any parameters used in the validation rule.
  It sould return a boolean value indicating whether the value is valid.
*/</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">add_validator</span><span class="p">(</span><span class="s1">'is_object'</span><span class="p">,</span> <span class="k">function</span><span class="p">(</span><span class="nv">$field</span><span class="p">,</span> <span class="nv">$input</span><span class="p">,</span> <span class="nv">$param</span> <span class="o">=</span> <span class="k">NULL</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nb">is_object</span><span class="p">(</span><span class="nv">$input</span><span class="p">[</span><span class="nv">$field</span><span class="p">]);</span>
<span class="p">});</span>

<span class="cm">/*
  Create a custom filter named "upper".
  The callback function receives two arguments:
  The value to filter, and any parameters used in the filter rule. It should returned the filtered value.
*/</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">add_filter</span><span class="p">(</span><span class="s1">'upper'</span><span class="p">,</span> <span class="k">function</span><span class="p">(</span><span class="nv">$value</span><span class="p">,</span> <span class="nv">$param</span> <span class="o">=</span> <span class="k">NULL</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nb">strtoupper</span><span class="p">(</span><span class="nv">$value</span><span class="p">);</span>
<span class="p">});</span>
</code></pre><h2 id='available-filters'>Available Filters</h2>
<p>Filters can be any PHP function that returns a string. You don&#39;t need to create your own if a PHP function exists that does what you want the filter to do.</p>

<table><thead>
<tr>
<th>Rule</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>sanitize_string</td>
<td>Remove script tags and encode HTML entities, similar to $this-&gt;validate-&gt;xss_clean();</td>
</tr>
<tr>
<td>urlencode</td>
<td>Encode url entities</td>
</tr>
<tr>
<td>htmlencode</td>
<td>Encode HTML entities</td>
</tr>
<tr>
<td>sanitize_email</td>
<td>Remove illegal characters from email addresses</td>
</tr>
<tr>
<td>sanitize_numbers</td>
<td>Remove any non-numeric characters</td>
</tr>
<tr>
<td>sanitize_floats</td>
<td>Remove any non-float characters</td>
</tr>
<tr>
<td>trim</td>
<td>Remove spaces from the beginning and end of strings</td>
</tr>
<tr>
<td>base64_encode</td>
<td>Base64 encode the input</td>
</tr>
<tr>
<td>base64_decode</td>
<td>Base64 decode the input</td>
</tr>
<tr>
<td>sha1</td>
<td>Encrypt the input with the secure sha1 algorithm</td>
</tr>
<tr>
<td>md5</td>
<td>MD5 encode the input</td>
</tr>
<tr>
<td>noise_words</td>
<td>Remove noise words from string</td>
</tr>
<tr>
<td>json_encode</td>
<td>Create a json representation of the input</td>
</tr>
<tr>
<td>json_decode</td>
<td>Decode a json string</td>
</tr>
<tr>
<td>rmpunctuation</td>
<td>Remove all known punctuation characters from a string</td>
</tr>
<tr>
<td>basic_tags</td>
<td>Remove all layout orientated HTML tags from text. Leaving only basic tags</td>
</tr>
<tr>
<td>whole_number</td>
<td>Check that the provided numeric value is represented as a whole number</td>
</tr>
</tbody></table>
<h2 id='validate-file-fields'>Validate file fields</h2>
<p>When you use a form that want to upload files, you can validate the file too</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$is_valid</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">is_valid</span><span class="p">(</span><span class="nb">array_merge</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">,</span> <span class="nv">$_FILES</span><span class="p">),</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'title'</span> <span class="o">=&gt;</span> <span class="s1">'required|alpha_numeric'</span><span class="p">,</span>
  <span class="s1">'image'</span> <span class="o">=&gt;</span> <span class="s1">'required_file|extension,png;jpg'</span>
<span class="p">));</span>

<span class="k">if</span> <span class="p">(</span><span class="nv">$is_valid</span> <span class="o">===</span> <span class="k">TRUE</span><span class="p">)</span>
<span class="p">{</span>
  <span class="c1">//continue
</span><span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="nb">print_r</span><span class="p">(</span><span class="nv">$is_valid</span><span class="p">);</span>
<span class="p">}</span>
</code></pre><h2 id='url-exists-example'>URL Exists (Example)</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$_POST</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'url'</span> <span class="o">=&gt;</span> <span class="s1">'http://asidnqowineoqiwneoinspoqwehpi1.com'</span> <span class="c1">// This url doesn't exist
</span><span class="p">);</span>

<span class="nv">$rules</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'url'</span> <span class="o">=&gt;</span> <span class="s1">'url_exists'</span>
<span class="p">);</span>

<span class="nv">$is_valid</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">validate</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">,</span> <span class="nv">$rules</span><span class="p">);</span>

<span class="k">if</span> <span class="p">(</span><span class="nv">$is_valid</span> <span class="o">===</span> <span class="k">TRUE</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'The URL provided is valid'</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="nb">print_r</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">get_readable_errors</span><span class="p">());</span>
<span class="p">}</span>
</code></pre><h2 id='validate-street-address-example'>Validate street address (Example)</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'street'</span> <span class="o">=&gt;</span> <span class="s1">'Kuwait 6958'</span>
<span class="p">);</span>

<span class="nv">$validate</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">is_valid</span><span class="p">(</span><span class="nv">$data</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'street'</span> <span class="o">=&gt;</span> <span class="s1">'required|street_address'</span>
<span class="p">));</span>

<span class="k">if</span> <span class="p">(</span><span class="nv">$validate</span> <span class="o">===</span> <span class="k">TRUE</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'Valid Street Address'</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="nb">print_r</span><span class="p">(</span><span class="nv">$validate</span><span class="p">);</span>
<span class="p">}</span>
</code></pre><h2 id='sanitize-string-example'>Sanitize string (Example)</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$_POST</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'string'</span> <span class="o">=&gt;</span> <span class="s1">'&lt;script&gt;alert(1); $("body").remove(); &lt;/script&gt;'</span>
<span class="p">);</span>

<span class="nv">$filter</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'string'</span> <span class="o">=&gt;</span> <span class="s1">'sanitize_string'</span>
<span class="p">);</span>

<span class="nb">print_r</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">,</span> <span class="nv">$filter</span><span class="p">));</span>
</code></pre><h2 id='match-strings-example'>Match strings (Example)</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'username'</span> <span class="o">=&gt;</span> <span class="s1">'myusername'</span><span class="p">,</span>
  <span class="s1">'password'</span> <span class="o">=&gt;</span> <span class="s1">'mypassword'</span><span class="p">,</span>
  <span class="s1">'password_confirm'</span> <span class="o">=&gt;</span> <span class="s1">'mypa33word'</span>
<span class="p">);</span>

<span class="nv">$is_valid</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">is_valid</span><span class="p">(</span><span class="nv">$data</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'username'</span> <span class="o">=&gt;</span> <span class="s1">'required|alpha_numeric'</span><span class="p">,</span>
  <span class="s1">'password'</span> <span class="o">=&gt;</span> <span class="s1">'required|max_len,100|min_len,6'</span><span class="p">,</span>
  <span class="s1">'password_confirm'</span> <span class="o">=&gt;</span> <span class="s1">'equalsfield,password'</span>
<span class="p">));</span>

<span class="k">if</span> <span class="p">(</span><span class="nv">$is_valid</span> <span class="o">===</span> <span class="k">TRUE</span><span class="p">)</span>
<span class="p">{</span>
  <span class="c1">// continue
</span><span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="nb">print_r</span><span class="p">(</span><span class="nv">$is_valid</span><span class="p">);</span>
<span class="p">}</span>
</code></pre><h2 id='escaping-mysql-strings-example'>Escaping Mysql Strings (Example)</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$_POST</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'username'</span> <span class="o">=&gt;</span> <span class="s1">'my username'</span><span class="p">,</span>
  <span class="s1">'password'</span> <span class="o">=&gt;</span> <span class="s2">"' OR ''='"</span>
<span class="p">);</span>

<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">sanitize</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">);</span>

<span class="nv">$filter</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'username'</span> <span class="o">=&gt;</span> <span class="s1">'noise_words'</span><span class="p">,</span>
  <span class="s1">'password'</span> <span class="o">=&gt;</span> <span class="s1">'trim|strtolower|addslashes'</span>
<span class="p">);</span>

<span class="nb">print_r</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">,</span> <span class="nv">$filter</span><span class="p">));</span>
</code></pre><h2 id='custom-validator-example'>Custom validator (Example)</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="c1">// Add the custom validator
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">add_validator</span><span class="p">(</span><span class="s1">'is_object'</span><span class="p">,</span> <span class="k">function</span><span class="p">(</span><span class="nv">$field</span><span class="p">,</span> <span class="nv">$input</span><span class="p">,</span> <span class="nv">$param</span> <span class="o">=</span> <span class="k">NULL</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nb">is_object</span><span class="p">(</span><span class="nv">$input</span><span class="p">[</span><span class="nv">$field</span><span class="p">]);</span>
<span class="p">});</span>

<span class="c1">// Generic data
</span><span class="nv">$input_data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'not_object'</span> <span class="o">=&gt;</span> <span class="s1">'asdqwezxc'</span><span class="p">,</span>
  <span class="s1">'valid_object'</span> <span class="o">=&gt;</span> <span class="k">new</span> <span class="k">stdClass</span><span class="p">()</span>
<span class="p">);</span>

<span class="nv">$rules</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'not_object'</span> <span class="o">=&gt;</span> <span class="s1">'is_object'</span><span class="p">,</span>
  <span class="s1">'valid_object'</span> <span class="o">=&gt;</span> <span class="s1">'is_object'</span>
<span class="p">);</span>

<span class="cm">/*
Long Method
*/</span>

<span class="nv">$validated</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">validate</span><span class="p">(</span>
  <span class="nv">$input_data</span><span class="p">,</span> <span class="nv">$rules</span>
<span class="p">);</span>

<span class="k">if</span> <span class="p">(</span><span class="nv">$validated</span> <span class="o">===</span> <span class="k">TRUE</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'Validation passed!'</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">get_readable_errors</span><span class="p">(</span><span class="k">TRUE</span><span class="p">);</span>
<span class="p">}</span>

<span class="cm">/*
Short Method
*/</span>

<span class="nv">$is_valid</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="o">-&gt;</span><span class="na">is_valid</span><span class="p">(</span><span class="nv">$input_data</span><span class="p">,</span> <span class="nv">$rules</span><span class="p">);</span>

<span class="k">if</span> <span class="p">(</span><span class="nv">$is_valid</span> <span class="o">===</span> <span class="k">TRUE</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'Validation passed!'</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="nb">print_r</span><span class="p">(</span><span class="nv">$is_valid</span><span class="p">);</span>
<span class="p">}</span>
</code></pre><h1 id='query-builder-class-cod_querybuilder'>Query Builder Class (COD_QueryBuilder)</h1>
<p>CodeDmx has a Mysqli Query Builder. This class can help you minified your code to connect with the database.</p>

<blockquote>
<p>First of all you need to load class</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">load</span><span class="o">-&gt;</span><span class="na">library</span><span class="p">(</span><span class="s1">'db'</span><span class="p">);</span>

<span class="c1">// Then
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
</code></pre><h2 id='select-query'>Select Query</h2>
<p>The following functions allow you to build SQL SELECT statements:</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$users</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$users</span><span class="p">);</span>
<span class="nv">$users</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$users</span><span class="p">);</span>
</code></pre>
<blockquote>
<p>You can select with custom columns set.</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$cols</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">'id'</span><span class="p">,</span> <span class="s1">'name'</span><span class="p">,</span> <span class="s1">'email'</span><span class="p">);</span>
<span class="nv">$users</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="nv">$cols</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">foreach</span> <span class="p">(</span><span class="nv">$users</span> <span class="k">as</span> <span class="nv">$user</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$user</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>You can select just one row</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'id'</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
<span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_one</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$user</span><span class="p">[</span><span class="s1">'id'</span><span class="p">];</span>

<span class="nv">$stats</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_one</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="s1">'sum(id), count(*) as cnt'</span><span class="p">);</span>
<span class="k">echo</span> <span class="s2">"total "</span> <span class="o">.</span> <span class="nv">$stats</span><span class="p">[</span><span class="s1">'cnt'</span><span class="p">]</span> <span class="o">.</span> <span class="s2">"users found"</span><span class="p">;</span>
</code></pre>
<blockquote>
<p>You can select one column value of function result</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$count</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_value</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="s1">'count(*)'</span><span class="p">);</span>
<span class="k">echo</span> <span class="s2">"</span><span class="si">{</span><span class="nv">$count</span><span class="si">}</span><span class="s2"> users found"</span><span class="p">;</span>
</code></pre>
<blockquote>
<p>You can select one column value or function result from multiple rows:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="c1">// Select login from users
</span><span class="nv">$logins</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_value</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="s1">'login'</span><span class="p">,</span> <span class="kc">null</span><span class="p">);</span>
<span class="c1">// Select login from users limit 5
</span><span class="nv">$logins</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_value</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="s1">'login'</span><span class="p">,</span> <span class="mi">5</span><span class="p">);</span>

<span class="k">foreach</span> <span class="p">(</span><span class="nv">$logins</span> <span class="k">as</span> <span class="nv">$login</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$login</span><span class="p">;</span>
<span class="p">}</span>
</code></pre><h2 id='insert-query'>Insert Query</h2>
<blockquote>
<p>Just a simple example:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s2">"login"</span> <span class="o">=&gt;</span> <span class="s2">"admin"</span><span class="p">,</span>
  <span class="s2">"firstName"</span> <span class="o">=&gt;</span> <span class="s2">"John"</span><span class="p">,</span>
  <span class="s2">"lastName"</span> <span class="o">=&gt;</span> <span class="s2">"Dow"</span>
<span class="p">);</span>
<span class="nv">$id</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">insert</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s2">"user was created. Id="</span> <span class="o">.</span> <span class="nv">$id</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>Insert with functions:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'login'</span> <span class="o">=&gt;</span> <span class="s1">'admin'</span><span class="p">,</span>
  <span class="s1">'active'</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
  <span class="s1">'firstName'</span> <span class="o">=&gt;</span> <span class="s1">'John'</span><span class="p">,</span>
  <span class="s1">'lastName'</span> <span class="o">=&gt;</span> <span class="s1">'Dow'</span><span class="p">,</span>
  <span class="s1">'password'</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">func</span><span class="p">(</span><span class="s1">'SHA1(?)'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">'secretpassword+salt'</span><span class="p">)),</span>
  <span class="c1">// password = SHA1('secretpassword+salt')
</span>  <span class="s1">'createdAt'</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">now</span><span class="p">(),</span>
  <span class="c1">// createdAt = NOW()
</span>  <span class="s1">'expires'</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">now</span><span class="p">(</span><span class="s1">'+1Y'</span><span class="p">)</span>
  <span class="c1">// expires = NOW() + interval 1 year
</span>  <span class="c1">// Supported intervals [s]econd, [m]inute, [h]our, [d]ay, [M]onth, [Y]ear
</span><span class="p">);</span>

<span class="nv">$id</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">insert</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s2">"user was created. Id="</span> <span class="o">.</span> <span class="nv">$id</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s2">"insert failed "</span> <span class="o">.</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_last_error</span><span class="p">();</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>Insert with on duplicate key update</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'login'</span> <span class="o">=&gt;</span> <span class="s1">'admin'</span><span class="p">,</span>
  <span class="s1">'firstName'</span> <span class="o">=&gt;</span> <span class="s1">'John'</span><span class="p">,</span>
  <span class="s1">'lastName'</span> <span class="o">=&gt;</span> <span class="s1">'Dow'</span><span class="p">,</span>
  <span class="s1">'createdAt'</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">now</span><span class="p">(),</span>
  <span class="s1">'updatedAt'</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">now</span><span class="p">()</span>
<span class="p">);</span>

<span class="nv">$update_columns</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">'updatedAt'</span><span class="p">);</span>
<span class="nv">$last_insert_id</span> <span class="o">=</span> <span class="s1">'id'</span><span class="p">;</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">on_duplicate</span><span class="p">(</span><span class="nv">$update_columns</span><span class="p">,</span> <span class="nv">$last_insert_id</span><span class="p">);</span>
<span class="nv">$id</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">insert</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
</code></pre>
<blockquote>
<p>Insert multiple data at once</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="k">array</span><span class="p">(</span><span class="s1">'login'</span> <span class="o">=&gt;</span> <span class="s1">'admin'</span><span class="p">,</span>
    <span class="s1">'firstName'</span> <span class="o">=&gt;</span> <span class="s1">'John'</span><span class="p">,</span>
    <span class="s1">'lastName'</span> <span class="o">=&gt;</span> <span class="s1">'Doe'</span>
  <span class="p">),</span>
  <span class="k">array</span><span class="p">(</span><span class="s1">'login'</span> <span class="o">=&gt;</span> <span class="s1">'other'</span><span class="p">,</span>
    <span class="s1">'firstName'</span> <span class="o">=&gt;</span> <span class="s1">'Another'</span><span class="p">,</span>
    <span class="s1">'lastName'</span> <span class="o">=&gt;</span> <span class="s1">'User'</span><span class="p">,</span>
    <span class="s1">'password'</span> <span class="o">=&gt;</span> <span class="s1">'very_cool_hash'</span>
  <span class="p">)</span>
<span class="p">);</span>

<span class="nv">$ids</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">insert_multi</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>

<span class="k">if</span> <span class="p">(</span> <span class="o">!</span> <span class="nv">$ids</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'insert failed: '</span> <span class="o">.</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_last_error</span><span class="p">();</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'new users inserted with following id\'s: '</span> <span class="o">.</span> <span class="nb">implode</span><span class="p">(</span><span class="s1">', '</span><span class="p">,</span> <span class="nv">$ids</span><span class="p">);</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>If all datasets only have the same keys, it can be simplified</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="k">array</span><span class="p">(</span><span class="s1">'admin'</span><span class="p">,</span> <span class="s1">'John'</span><span class="p">,</span> <span class="s1">'Doe'</span><span class="p">),</span>
  <span class="k">array</span><span class="p">(</span><span class="s1">'other'</span><span class="p">,</span> <span class="s1">'Another'</span><span class="p">,</span> <span class="s1">'User'</span><span class="p">),</span>
<span class="p">);</span>
<span class="nv">$keys</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">'login'</span><span class="p">,</span> <span class="s1">'firstName'</span><span class="p">,</span> <span class="s1">'lastName'</span><span class="p">);</span>

<span class="nv">$ids</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">insert_multi</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="nv">$data</span><span class="p">,</span> <span class="nv">$keys</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span> <span class="o">!</span> <span class="nv">$ids</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'insert failed: '</span> <span class="o">.</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_last_error</span><span class="p">();</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'new users inserted with following id\'s: '</span> <span class="o">.</span> <span class="nb">implode</span><span class="p">(</span><span class="s1">', '</span><span class="p">,</span> <span class="nv">$ids</span><span class="p">);</span>
<span class="p">}</span>
</code></pre><h2 id='update-query'>Update Query</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'firstName'</span> <span class="o">=&gt;</span> <span class="s1">'Bobby'</span><span class="p">,</span>
  <span class="s1">'lastName'</span> <span class="o">=&gt;</span> <span class="s1">'Tables'</span><span class="p">,</span>
  <span class="c1">// editCount = editCount + 2;
</span>  <span class="s1">'editCount'</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">inc</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span>
  <span class="c1">// active = !active;
</span>  <span class="s1">'active'</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">not</span><span class="p">()</span>
<span class="p">);</span>

<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'id'</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">update</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="nv">$data</span><span class="p">))</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">count</span> <span class="o">.</span> <span class="s1">' records were updated'</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'update failed: '</span> <span class="o">.</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_last_error</span><span class="p">();</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>Update also support limit parameter</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">update</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="nv">$data</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
<span class="c1">// Gives: UPDATE users SET ... LIMIT 10
</span></code></pre><h2 id='delete-query'>Delete Query</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'id'</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">delete</span><span class="p">(</span><span class="s1">'users'</span><span class="p">))</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'successfully deleted'</span><span class="p">;</span>
<span class="p">}</span>
</code></pre><h2 id='where-having-methods'>Where / Having Methods</h2>
<p>All conditions supported by where() are supported by having() as well.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'id'</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'login'</span><span class="p">,</span> <span class="s1">'admin'</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM users WHERE id = 1 AND login = 'admin'
</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'id'</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">having</span><span class="p">(</span><span class="s1">'login'</span><span class="p">,</span> <span class="s1">'admin'</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM users WHERE id = 1 HAVING login = 'admin'
</span></code></pre>
<blockquote>
<p>Compare with colum to colum</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="c1">// WRONG
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'lastLogin'</span><span class="p">,</span> <span class="s1">'createdAt'</span><span class="p">);</span>

<span class="c1">// CORRECT
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'lastLogin = createdAt'</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM users WHERE lastLogin = createdAt;
</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'id'</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="s2">"&gt;="</span><span class="p">);</span>
<span class="c1">// or $this-&gt;db-&gt;where('id', array('&gt;=' =&gt; 50));
</span><span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">//Gives: SELECT * FROM users WHERE id &gt;= 50
</span></code></pre>
<blockquote>
<p>LIKE</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'column_name'</span><span class="p">,</span> <span class="s1">'%string%'</span><span class="p">,</span> <span class="s1">'LIKE'</span><span class="p">);</span>
<span class="nv">$rows</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'table_name'</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM table_name WHERE column_name LIKE '%string%'
</span>
<span class="c1">// Or you can use
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'IP'</span><span class="p">,</span> <span class="s1">'%'</span> <span class="o">.</span> <span class="nv">$VAR</span> <span class="o">.</span> <span class="s1">'%'</span><span class="p">,</span> <span class="s1">'LIKE'</span><span class="p">);</span>
</code></pre>
<blockquote>
<p>BETWEEN / NOT BETWEEN</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'id'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">20</span><span class="p">),</span> <span class="s1">'BETWEEN'</span><span class="p">);</span>
<span class="c1">// or $this-&gt;db-&gt;where('id', array('BETWEEN' =&gt; array(4, 20)));
</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM users WHERE id BETWEEN 4 AND 20
</span></code></pre>
<blockquote>
<p>IN / NOT IN</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'id'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="s1">'d'</span><span class="p">),</span> <span class="s1">'IN'</span><span class="p">);</span>
<span class="c1">// or $this-&gt;db-&gt;where('id', array('IN' =&gt; array(1, 5, 27, -1, 'd')));
</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM users WHERE id IN (1, 5, 27, -1, 'd');
</span></code></pre>
<blockquote>
<p>OR CASE</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'firstName'</span><span class="p">,</span> <span class="s1">'John'</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">or_where</span><span class="p">(</span><span class="s1">'firstName'</span><span class="p">,</span> <span class="s1">'Peter'</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM users WHERE firstName='John' OR firstName='peter'
</span></code></pre>
<blockquote>
<p>NULL COMPARISON</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'lastName'</span><span class="p">,</span> <span class="k">NULL</span><span class="p">,</span> <span class="s1">'IS NOT'</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM users WHERE lastName IS NOT NULL
</span></code></pre>
<blockquote>
<p>Also you can use raw where conditions:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s2">"id != companyId"</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'DATE(createdAt) = DATE(lastLogin)'</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM users WHERE id != companyId AND DATE(createdAt) = DATE(lastLogin)
</span></code></pre>
<blockquote>
<p>Or raw condition with variables:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s2">"(id = ? OR id = ?)"</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">2</span><span class="p">));</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'login'</span><span class="p">,</span> <span class="s1">'mike'</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM users WHERE (id = 6 OR id = 2) AND login='mike'
</span></code></pre>
<blockquote>
<p>Find the total number of rows matched. Simple pagination example:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$offset</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
<span class="nv">$count</span> <span class="o">=</span> <span class="mi">15</span><span class="p">;</span>
<span class="nv">$users</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">with_total_count</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="nv">$offset</span><span class="p">,</span> <span class="nv">$count</span><span class="p">));</span>
<span class="k">echo</span> <span class="s2">"Showing </span><span class="si">{</span><span class="nv">$count</span><span class="si">}</span><span class="s2"> from </span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">total_count</span><span class="si">}</span><span class="s2">"</span><span class="p">;</span>
</code></pre><h2 id='ordering-method'>Ordering method</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">order_by</span><span class="p">(</span><span class="s1">'id'</span><span class="p">,</span> <span class="s1">'ASC'</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">order_by</span><span class="p">(</span><span class="s1">'login'</span><span class="p">,</span> <span class="s1">'DESC'</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">order_by</span><span class="p">(</span><span class="s1">'RAND ()'</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM users ORDER BY id ASC, login DESC, RAND();
</span></code></pre>
<blockquote>
<p>Order by values</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">order_by</span><span class="p">(</span><span class="s1">'userGoup'</span><span class="p">,</span> <span class="s1">'ASC'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">'superuser'</span><span class="p">,</span> <span class="s1">'admin'</span><span class="p">,</span> <span class="s1">'users'</span><span class="p">));</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM users ORDER BY FIELD (userGroup, 'superuser', 'admin', 'users') ASC;
</span></code></pre>
<blockquote>
<p>If you are using set_prefix() functionality and need to use tables names in order_by() method make sure that table names are escaped with &#39;&#39;.</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="c1">// WRONG
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">set_prefix</span><span class="p">(</span><span class="s2">"t_"</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">order_by</span><span class="p">(</span><span class="s2">"users.id"</span><span class="p">,</span> <span class="s1">'ASC'</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="c1">// WRONG: SELECT * FROM t_users ORDER BY users.id ASC;
</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">set_prefix</span><span class="p">(</span><span class="s2">"t_"</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">order_by</span><span class="p">(</span><span class="s2">"users.id"</span><span class="p">,</span> <span class="s1">'ASC'</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="c1">// CORRECT: SELECT * FROM t_users ORDER BY t_users.id ASC;
</span></code></pre><h2 id='groping-method'>Groping Method</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">group_by</span><span class="p">(</span><span class="s1">'name'</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM users GROUP BY name;
</span></code></pre><h2 id='join-method'>JOIN Method</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join</span><span class="p">(</span><span class="s1">'users u'</span><span class="p">,</span> <span class="s1">'p.id=u.id'</span><span class="p">,</span> <span class="s1">'LEFT'</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'u.id'</span><span class="p">,</span> <span class="mi">6</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'posts p'</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="s1">'u.firstName, p.title'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
</code></pre>
<blockquote>
<p>JOIN with 3 tables</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join</span><span class="p">(</span><span class="s1">'users u'</span><span class="p">,</span> <span class="s1">'p.id=u.id'</span><span class="p">,</span> <span class="s1">'LEFT'</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join</span><span class="p">(</span><span class="s1">'articles a'</span><span class="p">,</span> <span class="s1">'a.id=u.id'</span><span class="p">,</span> <span class="s1">'LEFT'</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'u.id'</span><span class="p">,</span> <span class="mi">6</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'posts p'</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="s1">'u.firstName, p.title, a.lolname'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
</code></pre>
<blockquote>
<p>JOIN with AND condition</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join</span><span class="p">(</span><span class="s1">'users u'</span><span class="p">,</span> <span class="s1">'p.id=u.id'</span><span class="p">,</span> <span class="s1">'LEFT'</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join_where</span><span class="p">(</span><span class="s1">'users u'</span><span class="p">,</span> <span class="s1">'u.id'</span><span class="p">,</span> <span class="mi">5</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'posts p'</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="s1">'u.firstName, p.title'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT u.firstName, p.title FROM products p LEFT JOIN users u ON (p.id=u.id AND u.id=5)
</span></code></pre>
<blockquote>
<p>JOIN with OR condition</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join</span><span class="p">(</span><span class="s1">'users u'</span><span class="p">,</span> <span class="s1">'p.id=u.id'</span><span class="p">,</span> <span class="s1">'LEFT'</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join_or_where</span><span class="p">(</span><span class="s1">'users u'</span><span class="p">,</span> <span class="s1">'u.id'</span><span class="p">,</span> <span class="mi">5</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'posts p'</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="s1">'u.firstName, p.title'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$results</span><span class="p">);</span>
<span class="c1">// Gives: SELECT u.firstName, p.title FROM products p LEFT JOIN users u ON (p.id=u.id OR u.id=5)
</span></code></pre><h2 id='has-method'>Has method</h2>
<p>A convenient function that returns TRUE if exists at least an element that satisfy the where condition specified calling the &quot;where&quot; method before this one.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'user'</span><span class="p">,</span> <span class="nv">$user</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'password'</span><span class="p">,</span> <span class="nb">md5</span><span class="p">(</span><span class="nv">$password</span><span class="p">));</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">has</span><span class="p">(</span><span class="s1">'users'</span><span class="p">))</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'You are logged'</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'Wrong user/password'</span><span class="p">;</span>
<span class="p">}</span>
</code></pre><h2 id='helper-methods'>Helper methods</h2>
<blockquote>
<p>Reconnect in case mysql connection died:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="k">if</span> <span class="p">(</span> <span class="o">!</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">ping</span><span class="p">())</span>
<span class="p">{</span>
  <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">connect</span><span class="p">();</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>Get last executed SQL query</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="k">echo</span> <span class="s1">'Last executed query was '</span><span class="o">.</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_last_query</span><span class="p">();</span>
</code></pre>
<blockquote>
<p>Check if table exists</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">table_exists</span><span class="p">(</span><span class="s1">'users'</span><span class="p">))</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'lml'</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>Real escape string</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$escaped</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">escape</span><span class="p">(</span><span class="s2">"' and 1=1"</span><span class="p">);</span>
</code></pre>
<blockquote>
<p>Error helpers</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'login'</span><span class="p">,</span> <span class="s1">'admin'</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">update</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="p">[</span><span class="s1">'firstName'</span> <span class="o">=&gt;</span> <span class="s1">'Jack'</span><span class="p">]);</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_last_errno</span><span class="p">()</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'Update succesfull'</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="s1">'Update failed. Erro: '</span><span class="o">.</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_last_error</span><span class="p">();</span>
<span class="p">}</span>
</code></pre><h2 id='properties-sharing'>Properties sharing</h2>
<p>Also is possible to copy properties</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'agentId'</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'active'</span><span class="p">,</span> <span class="k">TRUE</span><span class="p">);</span>

<span class="nv">$customers</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">copy</span><span class="p">();</span>
<span class="nv">$res</span> <span class="o">=</span> <span class="nv">$customers</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'customers'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">));</span>
<span class="c1">// Gives: SELECT * FROM customers WHERE agentId = 10 AND active = 1 LIMIT 10,10
</span>
<span class="nv">$cnt</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get_value</span><span class="p">(</span><span class="s1">'customers'</span><span class="p">,</span> <span class="s1">'count(id)'</span><span class="p">);</span>
<span class="k">echo</span> <span class="s1">'total records found: '</span><span class="o">.</span> <span class="nv">$cnt</span><span class="p">;</span>
<span class="c1">//Gives: SELECT count(id) FROM users WHERE agentId = 10 AND active = 1
</span></code></pre><h2 id='pagination'>Pagination</h2>
<p>Use paginate() instead of get() to fetch paginated result</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$page</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">page_limit</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
<span class="nv">$products</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">array_builder</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">paginate</span><span class="p">(</span><span class="s1">'products'</span><span class="p">,</span> <span class="nv">$page</span><span class="p">);</span>
<span class="k">echo</span> <span class="s1">'showing $page out of '</span><span class="o">.</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">total_pages</span><span class="p">;</span>
</code></pre><h2 id='query-exectution-time-benchmarking'>Query exectution time benchmarking</h2>
<p>To track query execution time set_trace() function should be called.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">set_trace</span><span class="p">(</span><span class="k">TRUE</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'test'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">trace</span><span class="p">);</span>

<span class="cm">/*
Array
(
    [0] =&gt; Array
        (
            [0] =&gt; SELECT  * FROM users
            [1] =&gt; 0.00048494338989258
        )

    [1] =&gt; Array
        (
            [0] =&gt; SELECT  * FROM test
            [1] =&gt; 0.0076069831848145
        )
)
*/</span>
</code></pre><h2 id='subqueries'>Subqueries</h2>
<blockquote>
<p>Subquery without an alias to use in insert/update/where Eg. (SELECT * FROM users)</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$subq</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">sub_query</span><span class="p">();</span>
<span class="nv">$subq</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
</code></pre>
<blockquote>
<p>Subquery in select</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$ids</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">sub_query</span><span class="p">();</span>
<span class="nv">$ids</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'qty'</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">'&gt;'</span><span class="p">);</span>
<span class="nv">$ids</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'products'</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="s1">'userId'</span><span class="p">);</span>

<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'id'</span><span class="p">,</span> <span class="nv">$ids</span><span class="p">,</span> <span class="s1">'in'</span><span class="p">);</span>
<span class="nv">$res</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>
<span class="c1">// Gives SELECT * FROM users WHERE id IN (SELECT userId FROM products WHERE qty &gt; 2)
</span></code></pre>
<blockquote>
<p>Subquery in join</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$users</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">sub_query</span><span class="p">(</span><span class="s1">'u'</span><span class="p">);</span>
<span class="nv">$users</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'active'</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
<span class="nv">$users</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">);</span>

<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join</span><span class="p">(</span><span class="nv">$users</span><span class="p">,</span> <span class="s1">'p.userId=u.id'</span><span class="p">,</span> <span class="s1">'LEFT'</span><span class="p">);</span>
<span class="nv">$products</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'products p'</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="s1">'u.login, p.productName'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$products</span><span class="p">);</span>
</code></pre>
<blockquote>
<p>Subquery in insert</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">sub_query</span><span class="p">();</span>
<span class="nv">$user</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'where'</span><span class="p">,</span> <span class="mi">6</span><span class="p">);</span>
<span class="nv">$user</span><span class="o">-&gt;</span><span class="na">get_one</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="s1">'name'</span><span class="p">);</span>

<span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
  <span class="s1">'productName'</span> <span class="o">=&gt;</span> <span class="s1">'test product'</span><span class="p">,</span>
  <span class="s1">'userId'</span> <span class="o">=&gt;</span> <span class="nv">$user</span><span class="p">,</span>
  <span class="s1">'lastUpdated'</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">now</span><span class="p">()</span>
<span class="p">);</span>

<span class="nv">$id</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">insert</span><span class="p">(</span><span class="s1">'products'</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
<span class="c1">// Gives: INSERT INTO products (productName, userId, lastUpdated) VALUES ("test product", (SELECT name FROM users WHERE id = 6), NOW());
</span></code></pre><h2 id='exists-not-exists-condition'>EXISTS / NOT EXISTS condition</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$sub</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">sub_query</span><span class="p">();</span>
<span class="nv">$sub</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'company'</span><span class="p">,</span> <span class="s1">'testCompany'</span><span class="p">);</span>
<span class="nv">$sub</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'users'</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="s1">'userId'</span><span class="p">);</span>

<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nv">$sub</span><span class="p">,</span> <span class="s1">'exists'</span><span class="p">);</span>
<span class="nv">$products</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'products'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$products</span><span class="p">);</span>
<span class="c1">// Gives: SELECT * FROM products WHERE EXISTS (SELECT userId FROM users WHERE company='testCompany')
</span></code></pre><h2 id='queries'>Queries</h2>
<p>This also can run your SQL queries directly</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$users</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">raw_query</span><span class="p">(</span><span class="s1">'SELECT * FROM users WHERE id &gt;= ?'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="mi">10</span><span class="p">));</span>
<span class="k">foreach</span> <span class="p">(</span><span class="nv">$users</span> <span class="k">as</span> <span class="nv">$user</span><span class="p">)</span>
<span class="p">{</span>
  <span class="nb">print_r</span><span class="p">(</span><span class="nv">$user</span><span class="p">);</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>Get one row of results</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">raw_query_one</span><span class="p">(</span><span class="s1">'SELECT * FROM users WHERE id=?'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="mi">10</span><span class="p">));</span>
<span class="k">echo</span> <span class="nv">$user</span><span class="p">[</span><span class="s1">'login'</span><span class="p">];</span>

<span class="c1">// Object return type
</span><span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">object_builder</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">raw_query_one</span><span class="p">(</span><span class="s1">'SELECT * FROM users WHERE id=?'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="mi">10</span><span class="p">));</span>
<span class="k">echo</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">login</span><span class="p">;</span>
</code></pre>
<blockquote>
<p>Get one column value as a string</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$password</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">raw_query_value</span><span class="p">(</span><span class="s1">'SELECT password FROM users WHERE id=? limit 1'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="mi">10</span><span class="p">));</span>
<span class="c1">// For a raw_query_value() return a string instead of an array, 'limit 1' should be added to the end of the query
</span><span class="k">echo</span> <span class="s1">'Password is {$password}'</span><span class="p">;</span>
</code></pre>
<blockquote>
<p>Get one colum value from multiple rows</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$login</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">raw_query_value</span><span class="p">(</span><span class="s1">'SELECT login FROM users LIMIT 10'</span><span class="p">);</span>
<span class="k">foreach</span> <span class="p">(</span><span class="nv">$login</span> <span class="k">as</span> <span class="nv">$var</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$var</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>An advanced examples</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$params</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s1">'admin'</span><span class="p">);</span>
<span class="nv">$users</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">raw_query</span><span class="p">(</span><span class="s1">'SELECT id, firstName, lastName FROM users WHERE id = ? AND login = ?'</span><span class="p">,</span> <span class="nv">$params</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$users</span><span class="p">);</span>

<span class="nv">$params</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
<span class="nv">$q</span> <span class="o">=</span> <span class="s1">'(
  SELECT a FROM t1
    WHERE a = ? AND B = ?
    ORDER BY a LIMIT ?
) UNION (
  SELECT a FROM t2
    WHERE a = ? AND B = ?
    ORDER BY a LIMIT ?
);'</span><span class="p">;</span>
<span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">raw_query</span><span class="p">(</span><span class="nv">$q</span><span class="p">,</span> <span class="nv">$params</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</code></pre><h1 id='encryptation-class-cod_bcrypt'>Encryptation Class (COD_Bcrypt)</h1>
<p>CodeDmx has an encryptation class. Some people believe MD5 would be a safe way to encode passwords. Is a lie! MD5 is a good method to obscure non-sensitive data, because it&#39;s quite fast.</p>

<aside class="warning">The default schema is $2y$, which makes use of the new, corrected hash implementation. This can be modify con CFG.php file</aside>
<h2 id='first-of-all-a-simple-example'>First of all: A simple example</h2>
<blockquote>
<p>To hash the password, you only need to call one method</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$password</span> <span class="o">=</span> <span class="s1">'my_password'</span><span class="p">;</span>
<span class="nv">$hashed</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">crypt</span><span class="o">-&gt;</span><span class="na">hash_password</span><span class="p">(</span><span class="nv">$password</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$hashed</span><span class="p">;</span>
<span class="c1">// Something like: $2y$12$lyAb7hOusPTvEGJBVmia4OGV8nU0pFhBOvG4NZRT3P/1lA3SAMoFK
</span></code></pre>
<blockquote>
<p>To check if password against the $hashed, and this returns TRUE / FALSE</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">crypt</span><span class="o">-&gt;</span><span class="na">check_password</span><span class="p">(</span><span class="nv">$password</span><span class="p">,</span> <span class="nv">$hashed</span><span class="p">))</span>
<span class="p">{</span>
  <span class="c1">// continue
</span><span class="p">}</span>
</code></pre><h2 id='work-factor'>Work factor</h2>
<p>To increase your hash security this method accepts the optional parameter $work_factor. This defines the number of rounds. With each round the creation time doubles, so the system is exponentially.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$work_factor</span> <span class="o">=</span> <span class="mi">16</span><span class="p">;</span>
<span class="nv">$password</span> <span class="o">=</span> <span class="s1">'my_password'</span><span class="p">;</span>
<span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">crypt</span><span class="o">-&gt;</span><span class="na">hash_password</span><span class="p">(</span><span class="nv">$password</span><span class="p">,</span> <span class="nv">$work_factor</span><span class="p">);</span>
</code></pre><h2 id='change-the-schema'>Change the schema</h2>
<p>To alter the default scheme, change the GLOBAL variable on your config file (/Model/CFG.php)$GLOBALS[&#39;COD&#39;]-&gt;identifier to the next strings</p>

<p>2a - Hash wich is potentially generated with the buggy algorithm</p>

<p>2x - &quot;compatibility&quot; option the buggy Bcrypt implementation</p>

<p>2y - Hash generated with the new, corrected algorithm implementation (crypt_blowfish 1.1 and newer)</p>
<h2 id='structure'>Structure</h2>
<p>$2a$12$Some22CharacterSaltXXO6NC3ydPIrirIzk1NdnTz0L/aCaHnlBa</p>

<p>$2a$ tells PHP to use which Blowfish scheme (Bcrypt is based on Blowfish)</p>

<p>12$ is the number f iterations the hashing mechanism uses</p>

<p>Some22CharacterSaltXX0 is a random salt (by OpenSSL)</p>

<blockquote>
<p>Diagram:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="err">$</span><span class="mi">2</span><span class="nx">a</span><span class="err">$</span><span class="mi">12</span><span class="nv">$Some22CharacterSaltXXO6NC3ydPIrirIzk1NdnTz0L</span><span class="o">/</span><span class="nx">aCaHnlBa</span>
<span class="nx">\___________________________</span><span class="o">/</span><span class="nx">\_____________________________</span><span class="o">/</span>
  <span class="nx">\</span>                            <span class="nx">\</span>
   <span class="nx">\</span>                            <span class="nx">\</span> <span class="nx">Actual</span> <span class="nx">Hash</span> <span class="p">(</span><span class="mi">31</span> <span class="nx">chars</span><span class="p">)</span>
    <span class="nx">\</span>
     <span class="nx">\</span>  <span class="err">$</span><span class="mi">2</span><span class="nx">a</span><span class="err">$</span>   <span class="mi">12</span><span class="err">$</span>   <span class="nx">Some22CharacterSaltXXO</span>
        <span class="nx">\__</span><span class="o">/</span>    <span class="nx">\</span>    <span class="nx">\____________________</span><span class="o">/</span>
          <span class="nx">\</span>      <span class="nx">\</span>              <span class="nx">\</span>
           <span class="nx">\</span>      <span class="nx">\</span>              <span class="nx">\</span> <span class="nx">Salt</span> <span class="p">(</span><span class="mi">22</span> <span class="nx">chars</span><span class="p">)</span>
            <span class="nx">\</span>      <span class="nx">\</span>
             <span class="nx">\</span>      <span class="nx">\</span> <span class="nx">Number</span> <span class="nx">of</span> <span class="nx">Rounds</span> <span class="p">(</span><span class="nx">work</span> <span class="nx">factor</span><span class="p">)</span>
              <span class="nx">\</span>
               <span class="nx">\</span> <span class="nx">Hash</span> <span class="nx">Header</span>
</code></pre><h1 id='imageclass-class-cod_imageclass'>ImageClass Class (COD_ImageClass)</h1>
<p>We updated this class on August 30, 2017.</p>

<p>CodeDmx has a class to manipulate images in PHP as simple as possible.
With this class, we can do:</p>

<ol>
<li>Rezie images (free resize, resize to width, resize to height, resize to fit)</li>
<li>Crop images</li>
<li>Flip / rotate / adjust orientation</li>
<li>Adjust brightness and contrast</li>
<li>Desaturate, colorize, pixelate, blur, etc</li>
<li>Overlay one image onto another (Watermarking)</li>
<li>Add text using a font of your choice</li>
<li>Convert between GIF, JPG, and PNG formats</li>
</ol>
<h2 id='first-of-all-a-simple-example-2'>First of all: A simple example</h2>
<p>In the first line we try to load the image.
In the second line we shrink it to fit within a 300x250 box, and save it to another path.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">load</span><span class="o">-&gt;</span><span class="na">library</span><span class="p">(</span><span class="s1">'image'</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">image</span><span class="o">-&gt;</span><span class="na">from_file</span><span class="p">(</span><span class="s1">'image.jpg'</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">best_fit</span><span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="mi">250</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">to_file</span><span class="p">(</span><span class="s1">'/path/to/new/image.png'</span><span class="p">,</span> <span class="s1">'image/png'</span><span class="p">);</span>
</code></pre><h2 id='saving'>Saving</h2>
<p>It&#39;s necessary to save the image after you manipulate it.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="c1">// Or you can specify a new filename
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">image</span><span class="o">-&gt;</span><span class="na">to_file</span><span class="p">(</span><span class="s1">'new-image.jpg'</span><span class="p">,</span> <span class="s1">'image/jpeg'</span><span class="p">);</span>

<span class="c1">// Also, you can specify quality as a second parameter in percents within range 0 - 100
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">image</span><span class="o">-&gt;</span><span class="na">to_file</span><span class="p">(</span><span class="s1">'new-image.jpg'</span><span class="p">,</span> <span class="s1">'image/jpeg'</span><span class="p">,</span> <span class="mi">90</span><span class="p">);</span>
</code></pre><h2 id='converting-between-formats'>Converting between Formats</h2>
<p>When you try to save it, you can determined by the file extension.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">image</span><span class="o">-&gt;</span><span class="na">from_file</span><span class="p">(</span><span class="s1">'/path/to/image.jpg'</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">to_file</span><span class="p">(</span><span class="s1">'/path/to/new/image.png'</span><span class="p">,</span> <span class="s1">'image/png'</span><span class="p">);</span>
</code></pre><h2 id='method-chaining'>Method Chaining</h2>
<p>This class supports method chaining, so you can make multiple changes and save the resulting image with just one line of code:</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">image</span><span class="o">-&gt;</span><span class="na">from_file</span><span class="p">(</span><span class="s1">'/path/to/image.jpg'</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">flip</span><span class="p">(</span><span class="s1">'x'</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">rotate</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">best_fit</span><span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="mi">250</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">desaturate</span><span class="p">()</span>
            <span class="o">-&gt;</span><span class="na">invert</span><span class="p">()</span>
            <span class="o">-&gt;</span><span class="na">to_file</span><span class="p">(</span><span class="s1">'/path/to/new-image.jpg'</span><span class="p">,</span> <span class="s1">'image/jpeg'</span><span class="p">);</span>
<span class="c1">// You can chain all of the methods below as well methods above.
</span></code></pre><h2 id='loaders'>Loaders</h2><h3 id='code-from_data_uri-uri-code'><code>from_data_uri($uri)</code></h3>
<ul>
<li><code>$uri</code>* (string) - A data URI.</li>
</ul>
<h3 id='code-from_file-file-code'><code>from_file($file)</code></h3>
<p>Loads an image from a file.</p>

<ul>
<li><code>$file</code>* (string) - The image file to load.</li>
</ul>
<h3 id='code-from_new-width-height-color-code'><code>from_new($width, $height, $color)</code></h3>
<p>Creates a new image.</p>

<ul>
<li><code>$width</code>* (int) - The width of the image.</li>
<li><code>$height</code>* (int) - The height of the image.</li>
<li><code>$color</code> (string|array) - Optional fill color for the new image (default &#39;transparent&#39;).</li>
</ul>
<h3 id='code-from_string-string-code'><code>from_string($string)</code></h3>
<p>Creates a new image from a string.</p>

<ul>
<li><code>$string</code>* (string) - The raw image data as a string. Example:
<code>
$string = file_get_contents(&#39;image.jpg&#39;);
</code></li>
</ul>
<h2 id='savers'>Savers</h2><h3 id='code-to_data_uri-mime_type-quality-code'><code>to_data_uri($mime_type, $quality)</code></h3>
<p>Generates a data URI.</p>

<ul>
<li><code>$mime_type</code> (string) - The image format to output as a mime type (defaults to the original mime type).</li>
<li><code>$quality</code> (int) - Image quality as a percentage (default 100).</li>
</ul>

<p>Returns a string containing a data URI.</p>
<h3 id='code-to_download-filename-mime_type-quality-code'><code>to_download($filename, $mime_type, $quality)</code></h3>
<p>Forces the image to be downloaded to the clients machine. Must be called before any output is sent to the screen.</p>

<ul>
<li><code>$filename</code>* (string) - The filename (without path) to send to the client (e.g. &#39;image.jpeg&#39;).</li>
<li><code>$mime_type</code> (string) - The image format to output as a mime type (defaults to the original mime type).</li>
<li><code>$quality</code> (int) - Image quality as a percentage (default 100).</li>
</ul>
<h3 id='code-to_file-file-mime_type-quality-code'><code>to_file($file, $mime_type, $quality)</code></h3>
<p>Writes the image to a file.</p>

<ul>
<li><code>$mime_type</code> (string) - The image format to output as a mime type (defaults to the original mime type).</li>
<li><code>$quality</code> (int) - Image quality as a percentage (default 100).</li>
</ul>
<h3 id='code-to_screen-mime_type-quality-code'><code>to_screen($mime_type, $quality)</code></h3>
<p>Outputs the image to the screen. Must be called before any output is sent to the screen.</p>

<ul>
<li><code>$mime_type</code> (string) - The image format to output as a mime type (defaults to the original mime type).</li>
<li><code>$quality</code> (int) - Image quality as a percentage (default 100).</li>
</ul>
<h3 id='code-to_string-mime_type-quality-code'><code>to_string($mime_type, $quality)</code></h3>
<p>Generates an image string.</p>

<ul>
<li><code>$mime_type</code> (string) - The image format to output as a mime type (defaults to the original mime type).</li>
<li><code>$quality</code> (int) - Image quality as a percentage (default 100).</li>
</ul>
<h2 id='utilities'>Utilities</h2><h3 id='code-get_aspect_ratio-code'><code>get_aspect_ratio()</code></h3>
<p>Gets the image&#39;s current aspect ratio.</p>

<p>Returns the aspect ratio as a float.</p>
<h3 id='code-get_exif-code'><code>get_exif()</code></h3>
<p>Gets the image&#39;s exif data.</p>

<p>Returns an array of exif data or null if no data is available.</p>
<h3 id='code-get_height-code'><code>get_height()</code></h3>
<p>Gets the image&#39;s current height.</p>

<p>Returns the height as an integer.</p>
<h3 id='code-get_mime_type-code'><code>get_mime_type()</code></h3>
<p>Gets the mime type of the loaded image.</p>

<p>Returns a mime type string.</p>
<h3 id='code-get_orientation-code'><code>get_orientation()</code></h3>
<p>Gets the image&#39;s current orientation.</p>

<p>Returns a string: &#39;landscape&#39;, &#39;portrait&#39;, or &#39;square&#39;</p>
<h3 id='code-get_width-code'><code>get_width()</code></h3>
<p>Gets the image&#39;s current width.</p>

<p>Returns the width as an integer.</p>
<h2 id='manipulation'>Manipulation</h2><h3 id='code-auto_orient-code'><code>auto_orient()</code></h3>
<p>Rotates an image so the orientation will be correct based on its exif data. It is safe to call this method on images that don&#39;t have exif data (no changes will be made).</p>
<h3 id='code-best_fit-max_width-max_height-code'><code>best_fit($max_width, $max_height)</code></h3>
<p>Proportionally resize the image to fit inside a specific width and height.</p>

<ul>
<li><code>$max_width</code>* (int) - The maximum width the image can be.</li>
<li><code>$max_height</code>* (int) - The maximum height the image can be.</li>
</ul>
<h3 id='code-crop-x1-y1-x2-y2-code'><code>crop($x1, $y1, $x2, $y2)</code></h3>
<p>Crop the image.</p>

<ul>
<li>$x1 - Top left x coordinate.</li>
<li>$y1 - Top left y coordinate.</li>
<li>$x2 - Bottom right x coordinate.</li>
<li>$y2 - Bottom right x coordinate.</li>
</ul>
<h3 id='code-flip-direction-code'><code>flip($direction)</code></h3>
<p>Flip the image horizontally or vertically.</p>

<ul>
<li><code>$direction</code>* (string) - The direction to flip: x|y|both</li>
</ul>
<h3 id='code-max_colors-max-dither-code'><code>max_colors($max, $dither)</code></h3>
<p>Reduces the image to a maximum number of colors.</p>

<ul>
<li><code>$max</code>* (int) - The maximum number of colors to use.</li>
<li><code>$dither</code> (bool) - Whether or not to use a dithering effect (default true).</li>
</ul>
<h3 id='code-overlay-overlay-anchor-opacity-x_offset-y_offset-code'><code>overlay($overlay, $anchor, $opacity, $x_offset, $y_offset)</code></h3>
<p>Place an image on top of the current image.</p>

<ul>
<li><code>$overlay</code>* (string|SimpleImage) - The image to overlay. This can be a filename, a data URI, or a SimpleImage object.</li>
<li><code>$anchor</code> (string) - The anchor point: &#39;center&#39;, &#39;top&#39;, &#39;bottom&#39;, &#39;left&#39;, &#39;right&#39;, &#39;top left&#39;, &#39;top right&#39;, &#39;bottom left&#39;, &#39;bottom right&#39; (default &#39;center&#39;)</li>
<li><code>$opacity</code> (float) - The opacity level of the overlay 0-1 (default 1).</li>
<li><code>$x_offset</code> (int) - Horizontal offset in pixels (default 0).</li>
<li><code>$y_offset</code> (int) - Vertical offset in pixels (default 0).</li>
</ul>
<h3 id='code-resize-width-height-code'><code>resize($width, $height)</code></h3>
<p>Resize an image to the specified dimensions. If only one dimension is specified, the image will be resized proportionally.</p>

<ul>
<li><code>$width</code>* (int) - The new image width.</li>
<li><code>$height</code>* (int) - The new image height.</li>
</ul>
<h3 id='code-rotate-angle-background_color-code'><code>rotate($angle, $background_color)</code></h3>
<p>Rotates the image.</p>

<ul>
<li><code>$angle</code>* (int) - The angle of rotation (-360 - 360).</li>
<li><code>$background_color</code> (string|array) - The background color to use for the uncovered zone area after rotation (default &#39;transparent&#39;).</li>
</ul>
<h3 id='code-text-text-options-amp-boundary-code'><code>text($text, $options, &amp;$boundary)</code></h3>
<p>Adds text to the image.</p>

<ul>
<li><code>$text*</code> (string) - The desired text.</li>
<li><code>$options</code> (array) - An array of options.

<ul>
<li><code>font_file</code>* (string) - The TrueType (or compatible) font file to use.</li>
<li><code>size</code> (int) - The size of the font in pixels (default 12).</li>
<li><code>color</code> (string|array) - The text color (default black).</li>
<li><code>anchor</code> (string) - The anchor point: &#39;center&#39;, &#39;top&#39;, &#39;bottom&#39;, &#39;left&#39;, &#39;right&#39;,
&#39;top left&#39;, &#39;top right&#39;, &#39;bottom left&#39;, &#39;bottom right&#39; (default &#39;center&#39;).</li>
<li><code>x_offset</code> (int) - The horizontal offset in pixels (default 0).</li>
<li><code>y_offset</code> (int) - The vertical offset in pixels (default 0).</li>
<li><code>shadow</code> (array) - Text shadow params.</li>
<li><code>x</code>* (int) - Horizontal offset in pixels.</li>
<li><code>y</code>* (int) - Vertical offset in pixels.</li>
<li><code>color</code>* (string|array) - The text shadow color.</li>
</ul></li>
<li><code>$boundary</code> (array) - If passed, this variable will contain an array with coordinates that
surround the text: [x1, y1, x2, y2, width, height]. This can be used for calculating the
text&#39;s position after it gets added to the image.</li>
</ul>
<h3 id='code-thumbnail-width-height-anchor-code'><code>thumbnail($width, $height, $anchor)</code></h3>
<p>Creates a thumbnail image. This function attempts to get the image as close to the provided dimensions as possible, then crops the remaining overflow to force the desired size. Useful for generating thumbnail images.</p>

<ul>
<li><code>$width</code>* (int) - The thumbnail width.</li>
<li><code>$height</code>* (int) - The thumbnail height.</li>
<li><code>$anchor</code> (string) - The anchor point: &#39;center&#39;, &#39;top&#39;, &#39;bottom&#39;, &#39;left&#39;, &#39;right&#39;, &#39;top left&#39;, &#39;top right&#39;, &#39;bottom left&#39;, &#39;bottom right&#39; (default &#39;center&#39;).</li>
</ul>
<h2 id='drawing'>Drawing</h2><h3 id='code-arc-x-y-width-height-start-end-color-thickness-code'><code>arc($x, $y, $width, $height, $start, $end, $color, $thickness)</code></h3>
<p>Draws an arc.</p>

<ul>
<li><code>$x</code>* (int) - The x coordinate of the arc&#39;s center.</li>
<li><code>$y</code>* (int) - The y coordinate of the arc&#39;s center.</li>
<li><code>$width</code>* (int) - The width of the arc.</li>
<li><code>$height</code>* (int) - The height of the arc.</li>
<li><code>$start</code>* (int) - The start of the arc in degrees.</li>
<li><code>$end</code>* (int) - The end of the arc in degrees.</li>
<li><code>$color</code>* (string|array) - The arc color.</li>
<li><code>$thickness</code> (int|string) - Line thickness in pixels or &#39;filled&#39; (default 1).</li>
</ul>
<h3 id='code-border-color-thickness-code'><code>border($color, $thickness)</code></h3>
<p>Draws a border around the image.</p>

<ul>
<li><code>$color</code>* (string|array) - The border color.</li>
<li><code>$thickness</code> (int) - The thickness of the border (default 1).</li>
</ul>
<h3 id='code-dot-x-y-color-code'><code>dot($x, $y, $color)</code></h3>
<p>Draws a single pixel dot.</p>

<ul>
<li><code>$x</code>* (int) - The x coordinate of the dot.</li>
<li><code>$y</code>* (int) - The y coordinate of the dot.</li>
<li><code>$color</code>* (string|array) - The dot color.</li>
</ul>
<h3 id='code-ellipse-x-y-width-height-color-thickness-code'><code>ellipse($x, $y, $width, $height, $color, $thickness)</code></h3>
<p>Draws an ellipse.</p>

<ul>
<li><code>$x</code>* (int) - The x coordinate of the center.</li>
<li><code>$y</code>* (int) - The y coordinate of the center.</li>
<li><code>$width</code>* (int) - The ellipse width.</li>
<li><code>$height</code>* (int) - The ellipse height.</li>
<li><code>$color</code>* (string|array) - The ellipse color.</li>
<li><code>$thickness</code> (int|string) - Line thickness in pixels or &#39;filled&#39; (default 1).</li>
</ul>
<h3 id='code-fill-color-code'><code>fill($color)</code></h3>
<p>Fills the image with a solid color.</p>

<ul>
<li><code>$color</code> (string|array) - The fill color.</li>
</ul>
<h3 id='code-line-x1-y1-x2-y2-color-thickness-code'><code>line($x1, $y1, $x2, $y2, $color, $thickness)</code></h3>
<p>Draws a line.</p>

<ul>
<li><code>$x1</code>* (int) - The x coordinate for the first point.</li>
<li><code>$y1</code>* (int) - The y coordinate for the first point.</li>
<li><code>$x2</code>* (int) - The x coordinate for the second point.</li>
<li><code>$y2</code>* (int) - The y coordinate for the second point.</li>
<li><code>$color</code> (string|array) - The line color.</li>
<li><code>$thickness</code> (int) - The line thickness (default 1).</li>
</ul>
<h3 id='code-polygon-vertices-color-thickness-code'><code>polygon($vertices, $color, $thickness)</code></h3>
<p>Draws a polygon.</p>

<ul>
<li><code>$vertices</code>* (array) - The polygon&#39;s vertices in an array of x/y arrays. Example:
<code>
[
[&#39;x&#39; =&gt; x1, &#39;y&#39; =&gt; y1],
[&#39;x&#39; =&gt; x2, &#39;y&#39; =&gt; y2],
[&#39;x&#39; =&gt; xN, &#39;y&#39; =&gt; yN]
]
</code></li>
<li><code>$color</code>* (string|array) - The polygon color.</li>
<li><code>$thickness</code> (int|string) - Line thickness in pixels or &#39;filled&#39; (default 1).</li>
</ul>
<h3 id='code-rectangle-x1-y1-x2-y2-color-thickness-code'><code>rectangle($x1, $y1, $x2, $y2, $color, $thickness)</code></h3>
<p>Draws a rectangle.</p>

<ul>
<li><code>$x1</code>* (int) - The upper left x coordinate.</li>
<li><code>$y1</code>* (int) - The upper left y coordinate.</li>
<li><code>$x2</code>* (int) - The bottom right x coordinate.</li>
<li><code>$y2</code>* (int) - The bottom right y coordinate.</li>
<li><code>$color</code>* (string|array) - The rectangle color.</li>
<li><code>$thickness</code> (int|string) - Line thickness in pixels or &#39;filled&#39; (default 1).</li>
</ul>
<h3 id='code-rounded_rectangle-x1-y1-x2-y2-radius-color-thickness-code'><code>rounded_rectangle($x1, $y1, $x2, $y2, $radius, $color, $thickness)</code></h3>
<p>Draws a rounded rectangle.</p>

<ul>
<li><code>$x1</code>* (int) - The upper left x coordinate.</li>
<li><code>$y1</code>* (int) - The upper left y coordinate.</li>
<li><code>$x2</code>* (int) - The bottom right x coordinate.</li>
<li><code>$y2</code>* (int) - The bottom right y coordinate.</li>
<li><code>$radius</code>* (int) - The border radius in pixels.</li>
<li><code>$color</code>* (string|array) - The rectangle color.</li>
<li><code>$thickness</code> (int|string) - Line thickness in pixels or &#39;filled&#39; (default 1).</li>
</ul>
<h2 id='filters'>Filters</h2><h3 id='code-blur-type-passes-code'><code>blur($type, $passes)</code></h3>
<p>Applies the blur filter.</p>

<ul>
<li><code>$type</code> (string) - The blur algorithm to use: &#39;selective&#39;, &#39;gaussian&#39; (default &#39;gaussian&#39;).</li>
<li><code>$passes</code> (int) - The number of time to apply the filter, enhancing the effect (default 1).</li>
</ul>
<h3 id='code-brighten-percentage-code'><code>brighten($percentage)</code></h3>
<p>Applies the brightness filter to brighten the image.</p>

<ul>
<li><code>$percentage</code>* (int) - Percentage to brighten the image (0 - 100).</li>
</ul>
<h3 id='code-colorize-color-code'><code>colorize($color)</code></h3>
<p>Applies the colorize filter.</p>

<ul>
<li><code>$color</code>* (string|array) - The filter color.</li>
</ul>
<h3 id='code-contrast-percentage-code'><code>contrast($percentage)</code></h3>
<p>Applies the contrast filter.</p>

<ul>
<li><code>$percentage</code>* (int) - Percentage to adjust (-100 - 100).</li>
</ul>
<h3 id='code-darken-percentage-code'><code>darken($percentage)</code></h3>
<p>Applies the brightness filter to darken the image.</p>

<ul>
<li><code>$percentage</code>* (int) - Percentage to darken the image (0 - 100).</li>
</ul>
<h3 id='code-desaturate-code'><code>desaturate()</code></h3>
<p>Applies the desaturate (grayscale) filter.</p>
<h3 id='code-duotone-light_color-dark_color-code'><code>duotone($light_color, $dark_color)</code></h3>
<p>Applies the duotone filter to the image.</p>

<ul>
<li><code>$light_color</code>* (string|array) - The lightest color in the duotone.</li>
<li><code>$dark_color</code>* (string|array) - The darkest color in the duotone.</li>
</ul>
<h3 id='code-edge_detect-code'><code>edge_detect()</code></h3>
<p>Applies the edge detect filter.</p>
<h3 id='code-emboss-code'><code>emboss()</code></h3>
<p>Applies the emboss filter.</p>
<h3 id='code-invert-code'><code>invert()</code></h3>
<p>Inverts the image&#39;s colors.</p>
<h3 id='code-opacity-code'><code>opacity()</code></h3>
<p>Changes the image&#39;s opacity level.</p>

<ul>
<li><code>$opacity</code>* (float) - The desired opacity level (0 - 1).</li>
</ul>
<h3 id='code-pixelate-size-code'><code>pixelate($size)</code></h3>
<p>Applies the pixelate filter.</p>

<ul>
<li><code>$size</code> (int) - The size of the blocks in pixels (default 10).</li>
</ul>
<h3 id='code-sepia-code'><code>sepia()</code></h3>
<p>Simulates a sepia effect by desaturating the image and applying a sepia tone.</p>
<h3 id='code-sharpen-code'><code>sharpen()</code></h3>
<p>Sharpens the image.</p>
<h3 id='code-sketch-code'><code>sketch()</code></h3>
<p>Applies the mean remove filter to produce a sketch effect.</p>
<h2 id='color-utilities'>Color utilities</h2><h3 id='code-static-adjust_color-color-red-green-blue-alpha-code'><code>(static) adjust_color($color, $red, $green, $blue, $alpha)</code></h3>
<p>Adjusts a color by increasing/decreasing red/green/blue/alpha values independently.</p>

<ul>
<li><code>$color</code>* (string|array) - The color to adjust.</li>
<li><code>$red</code>* (int) - Red adjustment (-255 - 255).</li>
<li><code>$green</code>* (int) - Green adjustment (-255 - 255).</li>
<li><code>$blue</code>* (int) - Blue adjustment (-255 - 255).</li>
<li><code>$alpha</code>* (float) - Alpha adjustment (-1 - 1).</li>
</ul>
<h3 id='code-static-darken_color-color-amount-code'><code>(static) darken_color($color, $amount)</code></h3>
<p>Darkens a color.</p>

<ul>
<li><code>$color</code>* (string|array) - The color to darken.</li>
<li><code>$amount</code>* (int) - Amount to darken (0 - 255).</li>
</ul>
<h3 id='code-extract_colors-count-10-backgroundcolor-null-code'><code>extract_colors($count = 10, $backgroundColor = null)</code></h3>
<p>Extracts colors from an image like a human would do.™ This method requires the third-party library \League\ColorExtractor. If you&#39;re using Composer, it will be installed for you automatically.</p>

<ul>
<li><code>$count</code> (int) - The max number of colors to extract (default 5).</li>
<li><code>$backgroundColor</code> (string|array) - By default any pixel with alpha value greater than zero will be discarded. This is because transparent colors are not perceived as is. For example, fully transparent black would be seen white on a white background. So if you want to take transparency into account, you have to specify a default background color.</li>
</ul>
<h3 id='code-get_colorat-x-y-code'><code>get_colorAt($x, $y)</code></h3>
<p>Gets the RGBA value of a single pixel.</p>

<ul>
<li><code>$x</code>* (int) - The horizontal position of the pixel.</li>
<li><code>$y</code>* (int) - The vertical position of the pixel.</li>
</ul>
<h3 id='code-static-lighten_color-color-amount-code'><code>(static) lighten_color($color, $amount)</code></h3>
<p>Lightens a color.</p>

<ul>
<li><code>$color</code>* (string|array) - The color to lighten.</li>
<li><code>$amount</code>* (int) - Amount to darken (0 - 255).</li>
</ul>
<h3 id='code-static-normalize_color-color-code'><code>(static) normalize_color($color)</code></h3>
<p>Normalizes a hex or array color value to a well-formatted RGBA array.</p>

<ul>
<li><code>$color</code>* (string|array) - A CSS color name, hex string, or an array [red, green, blue, alpha].</li>
</ul>

<p>You can pipe alpha transparency through hex strings and color names. For example:</p>

<p>#fff|0.50 &lt;-- 50% white
  red|0.25 &lt;-- 25% red</p>
<h1 id='mailing-class-cod_mailing'>Mailing Class (COD_Mailing)</h1>
<p>CodeDmx provides a simple, chainable class for sending basic emails.</p>
<h2 id='first-of-all-a-simple-example-3'>First of all: A simple example</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mail</span><span class="o">-&gt;</span><span class="na">set_to</span><span class="p">(</span><span class="s1">'youremail@gmail.com'</span><span class="p">,</span> <span class="s1">'Your Email'</span><span class="p">)</span>
  <span class="o">-&gt;</span><span class="na">set_subject</span><span class="p">(</span><span class="s1">'Test Message'</span><span class="p">)</span>
  <span class="o">-&gt;</span><span class="na">set_from</span><span class="p">(</span><span class="s1">'no-reply@domain.com'</span><span class="p">,</span> <span class="s1">'Domain.com'</span><span class="p">)</span>
  <span class="o">-&gt;</span><span class="na">add_mail_header</span><span class="p">(</span><span class="s1">'Reply-To'</span><span class="p">,</span> <span class="s1">'no-reply@domain.com'</span><span class="p">,</span> <span class="s1">'Test Name'</span><span class="p">)</span>
  <span class="o">-&gt;</span><span class="na">add_generic_header</span><span class="p">(</span><span class="s1">'X-Mailer'</span><span class="p">,</span> <span class="s1">'PHP/'</span> <span class="o">.</span> <span class="nb">phpversion</span><span class="p">())</span>
  <span class="o">-&gt;</span><span class="na">add_generic_header</span><span class="p">(</span><span class="s1">'Content-type'</span><span class="p">,</span> <span class="s1">'text/html; charset="utf-8"'</span><span class="p">)</span>
  <span class="o">-&gt;</span><span class="na">set_message</span><span class="p">(</span><span class="s1">'&lt;strong&gt;This is a test message.&lt;/strong&gt;'</span><span class="p">)</span>
  <span class="o">-&gt;</span><span class="na">set_wrap</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>
<span class="nv">$send</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mail</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>
<span class="k">echo</span> <span class="p">(</span><span class="nv">$send</span><span class="p">)</span> <span class="o">?</span> <span class="s1">'Email sent successfully'</span> <span class="o">:</span> <span class="s1">'Could not send email'</span><span class="p">;</span>
</code></pre><h2 id='sending-an-attachment'>Sending an Attachment</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mail</span><span class="o">-&gt;</span><span class="na">set_to</span><span class="p">(</span><span class="s1">'mailtest@gmail.com'</span><span class="p">,</span> <span class="s1">'Test user'</span><span class="p">)</span>
  <span class="o">-&gt;</span><span class="na">set_from</span><span class="p">(</span><span class="s1">'mailtest'</span><span class="p">,</span> <span class="s1">'Test user 2'</span><span class="p">)</span>
  <span class="o">-&gt;</span><span class="na">set_subject</span><span class="p">(</span><span class="s1">'This is a test message'</span><span class="p">)</span>
  <span class="o">-&gt;</span><span class="na">add_attachment</span><span class="p">(</span><span class="s1">'test.txt'</span><span class="p">)</span>
  <span class="o">-&gt;</span><span class="na">add_attachment</span><span class="p">(</span><span class="s1">'test.txt'</span><span class="p">,</span> <span class="s1">'test_attachment.txt'</span><span class="p">)</span>
  <span class="o">-&gt;</span><span class="na">set_message</span><span class="p">(</span><span class="s1">'Hi there'</span><span class="p">);</span>
<span class="nv">$send</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mail</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>
<span class="k">echo</span> <span class="p">(</span><span class="nv">$send</span><span class="p">)</span> <span class="o">?</span> <span class="s1">'Email sent successfully'</span> <span class="o">:</span> <span class="s1">'Could not send email'</span><span class="p">;</span>
</code></pre><h2 id='available-methods-2'>Available Methods</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="c1">// $email The email address to send to
// $name The name of the person to send to
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mail</span><span class="o">-&gt;</span><span class="na">set_to</span><span class="p">(</span><span class="nv">$email</span><span class="p">,</span> <span class="nv">$name</span><span class="p">);</span>
<span class="cm">/* $this-&gt;mail-&gt;set_to('rober@google.com', 'Robert'); */</span>

<span class="c1">// Set the email subject
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mail</span><span class="o">-&gt;</span><span class="na">set_subject</span><span class="p">(</span><span class="nv">$subject</span><span class="p">);</span>
<span class="cm">/* $this-&gt;mail-&gt;set_subject('Test my mail of CodeDmx'); */</span>

<span class="c1">// Set the message to send
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mail</span><span class="o">-&gt;</span><span class="na">set_message</span><span class="p">(</span><span class="nv">$message</span><span class="p">);</span>
<span class="cm">/* $this-&gt;mail-&gt;set_message('Here is my test of mailing with the PHP Framework CodeDmx'); */</span>
<span class="cm">/* $this-&gt;mail-&gt;set_message('&lt;p&gt;Here is my test with HTML&lt;/p&gt;'); */</span>

<span class="c1">// $path The file path of the attachment
// Optional $filename The filename of the attachment when emailed
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mail</span><span class="o">-&gt;</span><span class="na">add_attachment</span><span class="p">(</span><span class="nv">$path</span><span class="p">,</span> <span class="nv">$filename</span> <span class="o">=</span> <span class="kc">null</span><span class="p">);</span>
<span class="cm">/* $this-&gt;mail-&gt;add_attachment('/path/to/file.txt') */</span>
<span class="cm">/* $this-&gt;mail-&gt;add_attachment('/path/to/file.txt', 'new_name_file.txt') */</span>

<span class="c1">// $email The email to send as from
// $name The name to send as from
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mail</span><span class="o">-&gt;</span><span class="na">set_from</span><span class="p">(</span><span class="nv">$email</span><span class="p">,</span> <span class="nv">$name</span><span class="p">);</span>
<span class="cm">/* $this-&gt;mail-&gt;set_from('ruben@google.com', 'Ruben') */</span>

<span class="c1">// $header The header to add
// Optional $email The email to add
// Optional $name The name to add
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mail</span><span class="o">-&gt;</span><span class="na">add_mail_header</span><span class="p">(</span><span class="nv">$header</span><span class="p">,</span> <span class="nv">$email</span> <span class="o">=</span> <span class="kc">null</span><span class="p">,</span> <span class="nv">$name</span> <span class="o">=</span> <span class="kc">null</span><span class="p">);</span>
<span class="cm">/* $this-&gt;mail-&gt;add_mail_header('Reply-To', 'zuck@google.com', 'Zuck') */</span>

<span class="c1">// $header The generic header to add
// $value The value of the header
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mail</span><span class="o">-&gt;</span><span class="na">add_generic_header</span><span class="p">(</span><span class="nv">$header</span><span class="p">,</span> <span class="nv">$value</span><span class="p">);</span>
<span class="cm">/* $this-&gt;mail-&gt;add_generic_header('Content-type', 'text/html, charset="utf-8"') */</span>

<span class="c1">// $wrap The number of characters at which the message will wrap
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mail</span><span class="o">-&gt;</span><span class="na">set_wrap</span><span class="p">(</span><span class="nv">$wrap</span><span class="p">);</span>
<span class="cm">/* $this-&gt;mail-&gt;set_wrap(100); */</span>

<span class="c1">// Send to 'To: ' address
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mail</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>
<span class="cm">/*
$send = $this-&gt;mail-&gt;send();
echo ($send) ? 'Email send' : 'Unable to send';
*/</span>
</code></pre><h1 id='timeago-class-cod_timeago'>TimeAgo Class (COD_TimeAgo)</h1>
<blockquote>
<p>How to determine, what &quot;ago&quot; is</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
  <span class="mi">0</span> <span class="o">&lt;-&gt;</span> <span class="mi">29</span> <span class="nx">secs</span>                                                             <span class="c1"># =&gt; less than a minute
</span>  <span class="mi">30</span> <span class="nx">secs</span> <span class="o">&lt;-&gt;</span> <span class="mi">1</span> <span class="nb">min</span><span class="p">,</span> <span class="mi">29</span> <span class="nx">secs</span>                                                <span class="c1"># =&gt; 1 minute
</span>  <span class="mi">1</span> <span class="nb">min</span><span class="p">,</span> <span class="mi">30</span> <span class="nx">secs</span> <span class="o">&lt;-&gt;</span> <span class="mi">44</span> <span class="nx">mins</span><span class="p">,</span> <span class="mi">29</span> <span class="nx">secs</span>                                       <span class="c1"># =&gt; [2..44] minutes
</span>  <span class="mi">44</span> <span class="nx">mins</span><span class="p">,</span> <span class="mi">30</span> <span class="nx">secs</span> <span class="o">&lt;-&gt;</span> <span class="mi">89</span> <span class="nx">mins</span><span class="p">,</span> <span class="mi">29</span> <span class="nx">secs</span>                                     <span class="c1"># =&gt; about 1 hour
</span>  <span class="mi">89</span> <span class="nx">mins</span><span class="p">,</span> <span class="mi">29</span> <span class="nx">secs</span> <span class="o">&lt;-&gt;</span> <span class="mi">23</span> <span class="nx">hrs</span><span class="p">,</span> <span class="mi">59</span> <span class="nx">mins</span><span class="p">,</span> <span class="mi">29</span> <span class="nx">secs</span>                             <span class="c1"># =&gt; about [2..24] hours
</span>  <span class="mi">23</span> <span class="nx">hrs</span><span class="p">,</span> <span class="mi">59</span> <span class="nx">mins</span><span class="p">,</span> <span class="mi">29</span> <span class="nx">secs</span> <span class="o">&lt;-&gt;</span> <span class="mi">47</span> <span class="nx">hrs</span><span class="p">,</span> <span class="mi">59</span> <span class="nx">mins</span><span class="p">,</span> <span class="mi">29</span> <span class="nx">secs</span>                     <span class="c1"># =&gt; 1 day
</span>  <span class="mi">47</span> <span class="nx">hrs</span><span class="p">,</span> <span class="mi">59</span> <span class="nx">mins</span><span class="p">,</span> <span class="mi">29</span> <span class="nx">secs</span> <span class="o">&lt;-&gt;</span> <span class="mi">29</span> <span class="nx">days</span><span class="p">,</span> <span class="mi">23</span> <span class="nx">hrs</span><span class="p">,</span> <span class="mi">59</span> <span class="nx">mins</span><span class="p">,</span> <span class="mi">29</span> <span class="nx">secs</span>            <span class="c1"># =&gt; [2..29] days
</span>  <span class="mi">29</span> <span class="nx">days</span><span class="p">,</span> <span class="mi">23</span> <span class="nx">hrs</span><span class="p">,</span> <span class="mi">59</span> <span class="nx">mins</span><span class="p">,</span> <span class="mi">30</span> <span class="nx">secs</span> <span class="o">&lt;-&gt;</span> <span class="mi">59</span> <span class="nx">days</span><span class="p">,</span> <span class="mi">23</span> <span class="nx">hrs</span><span class="p">,</span> <span class="mi">59</span> <span class="nx">mins</span><span class="p">,</span> <span class="mi">29</span> <span class="nx">secs</span>   <span class="c1"># =&gt; about 1 month
</span>  <span class="mi">59</span> <span class="nx">days</span><span class="p">,</span> <span class="mi">23</span> <span class="nx">hrs</span><span class="p">,</span> <span class="mi">59</span> <span class="nx">mins</span><span class="p">,</span> <span class="mi">30</span> <span class="nx">secs</span> <span class="o">&lt;-&gt;</span> <span class="mi">1</span> <span class="nx">yr</span> <span class="nx">minus</span> <span class="mi">1</span> <span class="nx">sec</span>                    <span class="c1"># =&gt; [2..12] months
</span>  <span class="mi">1</span> <span class="nx">yr</span> <span class="o">&lt;-&gt;</span> <span class="mi">2</span> <span class="nx">yrs</span> <span class="nx">minus</span> <span class="mi">1</span> <span class="nx">secs</span>                                               <span class="c1"># =&gt; about 1 year
</span>  <span class="mi">2</span> <span class="nx">yrs</span> <span class="o">&lt;-&gt;</span> <span class="nb">max</span> <span class="nb">time</span> <span class="k">or</span> <span class="nb">date</span>                                                <span class="c1"># =&gt; over [2..X] years
</span></code></pre>
<p>Simple module, that displays the date in a &quot;time ago&quot; format.</p>

<blockquote>
<p>Using this class</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="c1">// The array must have two values
// First one is about TimeZone like 'America/Chihuahua'
// Second one is about language, by default is in spanish
</span><span class="nv">$arg</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="s1">'en'</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">load</span><span class="o">-&gt;</span><span class="na">library</span><span class="p">(</span><span class="s1">'timeago'</span><span class="p">,</span> <span class="nv">$arg</span><span class="p">);</span>

<span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">timeago</span><span class="o">-&gt;</span><span class="na">in_words</span><span class="p">(</span><span class="s1">'2016-06-05 10:10:10'</span><span class="p">);</span>
</code></pre>
<blockquote>
<p>Do you want the actual years, months, days, hours, minutes, seconds difference?</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">load</span><span class="o">-&gt;</span><span class="na">library</span><span class="p">(</span><span class="s1">'timeago'</span><span class="p">);</span>
<span class="nv">$dateDifferenceArray</span> <span class="o">=</span>  <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">timeago</span><span class="o">-&gt;</span><span class="na">date_difference</span><span class="p">(</span><span class="s2">"2017-03-02 07:53:00"</span><span class="p">,</span> <span class="s2">"2017-03-02 07:53:01"</span><span class="p">);</span>

<span class="c1">// This will return an array with the following data:
</span>
<span class="p">[</span>
  <span class="s1">'years'</span> <span class="o">=&gt;</span> <span class="mi">0</span>
  <span class="s1">'months'</span> <span class="o">=&gt;</span> <span class="mi">0</span>
  <span class="s1">'days'</span> <span class="o">=&gt;</span> <span class="mi">0</span>
  <span class="s1">'hours'</span> <span class="o">=&gt;</span> <span class="mi">0</span>
  <span class="s1">'minutes'</span> <span class="o">=&gt;</span> <span class="mi">0</span>
  <span class="s1">'seconds'</span> <span class="o">=&gt;</span> <span class="mi">1</span>
<span class="p">]</span>
</code></pre><h1 id='ftp-class-cod_ftp'>FTP class (COD_Ftp)</h1>
<p>CodeDmx has a FTP Class, that permits files to be transferred to a remote server. By this class you can move, rename and delete files or folders.</p>

<aside class="warning">SFTP AND SSL FTP protocols are not supported.</aside>

<p>If you prefer you can store your FTP preferences in a config file in /Model/CFG.php, and this will be used automatically.</p>

<blockquote>
<p>First of all you need to load class</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">load</span><span class="o">-&gt;</span><span class="na">library</span><span class="p">(</span><span class="s1">'ftp'</span><span class="p">);</span>

<span class="c1">//Then
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">ftp</span><span class="o">-&gt;</span><span class="na">connect</span><span class="p">();</span>
</code></pre><h2 id='connect-to-host'>Connect to host</h2>
<p>Connects to the FTP server. Connection preferences are set by passing an array to the function, or you can store them in the config file in /Model/CFG.php.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$ftp</span><span class="p">[</span><span class="s1">'hostname'</span><span class="p">]</span> <span class="o">=</span> <span class="s1">'ftp.host.com'</span><span class="p">;</span>
<span class="nv">$ftp</span><span class="p">[</span><span class="s1">'username'</span><span class="p">]</span> <span class="o">=</span> <span class="s1">'your-username'</span><span class="p">;</span>
<span class="nv">$ftp</span><span class="p">[</span><span class="s1">'password'</span><span class="p">]</span> <span class="o">=</span> <span class="s1">'your-password'</span><span class="p">;</span>

<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">ftp</span><span class="o">-&gt;</span><span class="na">connect</span><span class="p">(</span><span class="nv">$ftp</span><span class="p">);</span>
</code></pre><h3 id='available-connection-options'>Available connection options</h3>
<table><thead>
<tr>
<th>Option name</th>
<th>Default value</th>
</tr>
</thead><tbody>
<tr>
<td>hostname</td>
<td>n/a</td>
</tr>
<tr>
<td>username</td>
<td>n/a</td>
</tr>
<tr>
<td>password</td>
<td>n/a</td>
</tr>
<tr>
<td>port</td>
<td>21</td>
</tr>
<tr>
<td>passive</td>
<td>TRUE    [TRUE/FALSE (boolean)]</td>
</tr>
</tbody></table>
<h2 id='upload-a-file'>Upload a file</h2>
<p>Uploads a file to your server. You must supply the local path and the remote path, and you can optionally set the mode and permissions. Example:</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">ftp</span><span class="o">-&gt;</span><span class="na">put</span><span class="p">(</span><span class="s1">'/local/path/to/myfile.html'</span><span class="p">,</span> <span class="s1">'/public_html/myfile.html'</span><span class="p">);</span>
</code></pre><h3 id='parameters'>Parameters:</h3>
<table><thead>
<tr>
<th>Variable</th>
<th>Definition</th>
<th>Default value</th>
</tr>
</thead><tbody>
<tr>
<td>$local_path (string)</td>
<td>Local file path</td>
<td>n/a</td>
</tr>
<tr>
<td>$remote_path (string)</td>
<td>Remote file path</td>
<td>n/a</td>
</tr>
<tr>
<td>$mode (string)</td>
<td>FTP mode (options are: ‘auto’, ‘binary’, ‘ascii’)</td>
<td>&#39;auto&#39;</td>
</tr>
<tr>
<td>$permissions (int)</td>
<td>File permissions (octal)</td>
<td>&#39;0777&#39;</td>
</tr>
</tbody></table>
<h2 id='download-a-file'>Download a file</h2>
<p>Downloads a file from your server. You must supply the remote path and the local path, and you can optionally set the mode. Example:</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">ftp</span><span class="o">-&gt;</span><span class="na">download</span><span class="p">(</span><span class="s1">'/public_html/myfile.html'</span><span class="p">,</span> <span class="s1">'/local/path/to/myfile.html'</span><span class="p">);</span>
</code></pre><h3 id='parameters-2'>Parameters:</h3>
<table><thead>
<tr>
<th>Variable</th>
<th>Definition</th>
<th>Default value</th>
</tr>
</thead><tbody>
<tr>
<td>$remote_path (string)</td>
<td>Remote file path</td>
<td>n/a</td>
</tr>
<tr>
<td>$local_path (string)</td>
<td>Local file path</td>
<td>n/a</td>
</tr>
<tr>
<td>$mode (string)</td>
<td>FTP mode (options are: ‘auto’, ‘binary’, ‘ascii’)</td>
<td>&#39;auto&#39;</td>
</tr>
</tbody></table>
<h2 id='delete-a-file'>Delete a file</h2>
<p>Supply the source path with the file name.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">ftp</span><span class="o">-&gt;</span><span class="na">delete_file</span><span class="p">(</span><span class="s1">'/public_html/joe/blog.html'</span><span class="p">);</span>
</code></pre><h2 id='delete-a-folder'>Delete a folder</h2>
<p>Supply the source path to the directory with a trailing slash.</p>

<aside class="warning">Be VERY careful with this method! It will recursively delete everything within the supplied path, including sub-folders and all files. Make absolutely sure your path is correct. Try using list() first to verify that your path is correct.</aside>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">ftp</span><span class="o">-&gt;</span><span class="na">delete_dir</span><span class="p">(</span><span class="s1">'/public_html/path/to/folder/'</span><span class="p">);</span>
</code></pre><h2 id='list-files'>List files</h2>
<p>Permits you to retrieve a list of files on your server returned as an array. You must supply the path to the desired directory.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$list</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">ftp</span><span class="o">-&gt;</span><span class="na">list</span><span class="p">(</span><span class="s1">'/public_html/'</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="nv">$list</span><span class="p">);</span>
</code></pre><h2 id='create-directory'>Create directory</h2>
<p>Lets you create a directory on your server. Supply the path ending in the folder name you wish to create, with a trailing slash.</p>

<p>Permissions can be set by passing an octal value in the second parameter.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="c1">// Creates a folder named "bar"
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">ftp</span><span class="o">-&gt;</span><span class="na">mkdir</span><span class="p">(</span><span class="s1">'/public_html/foo/bar/'</span><span class="p">,</span> <span class="mo">0755</span><span class="p">);</span>
</code></pre><h2 id='rename-a-file'>Rename a file</h2>
<p>Permits you to rename a file. Supply the source file name/path and the new file name/path.</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="c1">// Renames green.html to blue.html
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">ftp</span><span class="o">-&gt;</span><span class="na">rename</span><span class="p">(</span><span class="s1">'/public_html/foo/green.html'</span><span class="p">,</span> <span class="s1">'/public_html/foo/blue.html'</span><span class="p">);</span>
</code></pre><h2 id='move-a-file'>Move a file</h2>
<p>Lets you move a file. Supply the source and destination paths:</p>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="c1">// Moves blog.html from "joe" to "fred"
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">ftp</span><span class="o">-&gt;</span><span class="na">move</span><span class="p">(</span><span class="s1">'/public_html/joe/blog.html'</span><span class="p">,</span> <span class="s1">'/public_html/fred/blog.html'</span><span class="p">);</span>
</code></pre><h1 id='upload-class-cod_upload'>Upload class (COD_Upload)</h1>
<p>CodeDmx has an Upload Class, that permits upload files to a remote server.</p>

<blockquote>
<p>First of all you need to load class</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">load</span><span class="o">-&gt;</span><span class="na">library</span><span class="p">(</span><span class="s1">'upload'</span><span class="p">);</span>

<span class="c1">//Then
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">method</span><span class="p">();</span>
</code></pre><h2 id='a-simple-example-2'>A simple example</h2><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="k">if</span> <span class="p">(</span> <span class="o">!</span> <span class="k">empty</span><span class="p">(</span><span class="nv">$_FILES</span><span class="p">))</span>
<span class="p">{</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">load</span><span class="o">-&gt;</span><span class="na">library</span><span class="p">(</span><span class="s1">'upload'</span><span class="p">);</span>

    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">input</span><span class="p">(</span><span class="s1">'file'</span><span class="p">);</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">destination</span><span class="p">(</span><span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">'COD'</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">doc</span> <span class="o">.</span> <span class="s1">'uploads'</span> <span class="o">.</span> <span class="nx">DS</span><span class="p">);</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">save</span><span class="p">();</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">status</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="k">echo</span> <span class="s1">'is upload!'</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="cp">?&gt;</span>
<span class="nt">&lt;form</span> <span class="na">method=</span><span class="s">"post"</span> <span class="na">action=</span><span class="s">""</span> <span class="na">enctype=</span><span class="s">"multipart/form-data"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">name=</span><span class="s">"file"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"Upload now!"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre><h2 id='allow_mime_type'>allow_mime_type</h2>
<p>This method will allow you to establish a new mime type</p>

<blockquote>
<p>Example:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">allow_mime_type</span><span class="p">(</span><span class="s2">"text/html"</span><span class="p">);</span>

<span class="c1"># But you can also use the mime_helping(Show more in $mime_helping)
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">allow_mime_type</span><span class="p">(</span><span class="s2">"image"</span><span class="p">);</span> <span class="c1">// Set: image/jpeg, image/jpg, image/pjpeg, image/png and image/gif.
</span></code></pre><h2 id='allowed_mime_types'>allowed_mime_types</h2>
<p>This method will allow you to set multiple mime types.</p>

<blockquote>
<p>Example:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">allowed_mime_types</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
    <span class="s2">"text/plain"</span><span class="p">,</span>
    <span class="s2">"text/html"</span>
<span class="p">));</span>
</code></pre><h2 id='auto_filename'>auto_filename</h2>
<p>This method will allow you to generate a unique name for the file you are uploading.</p>
<h2 id='callback_input'>callback_input</h2>
<p>This method will allow you to set a function to be executed to start the process. The method used must have a single parameter, which will be equivalent $this-&gt;upload-&gt;get_info()</p>

<blockquote>
<p>Example:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">callback_input</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="nv">$file</span><span class="p">){</span>
    <span class="k">echo</span> <span class="s2">"start!"</span><span class="p">;</span>
<span class="p">});</span>
</code></pre><h2 id='callback_output'>callback_output</h2>
<p>This method will allow you to set a function to be executed at the end of the process. The method used must have a single parameter, which will be equivalent $this-&gt;upload-&gt;get_info()</p>

<blockquote>
<p>Example:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">callback_output</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="nv">$file</span><span class="p">){</span>
    <span class="nb">rename</span><span class="p">(</span><span class="nv">$file</span><span class="o">-&gt;</span><span class="na">destination</span><span class="p">,</span> <span class="nb">time</span><span class="p">());</span>
<span class="p">});</span>
</code></pre><h2 id='destination'>destination</h2>
<p>This method allows you to set where the file will be saved trying to upload.</p>

<p>If the file path does not exist, you can set the parameter to true $create_if_not_exist when trying to create a new path.</p>

<blockquote>
<p>Examples:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">destination</span><span class="p">(</span><span class="s2">"./uploads"</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">destination</span><span class="p">(</span><span class="s2">"../uploads"</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">destination</span><span class="p">(</span><span class="s2">"/var/www/html/uploads"</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">destination</span><span class="p">(</span><span class="s2">"/var/www/html/uploads/tmp"</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span> <span class="c1">// If path not exists, force create
</span></code></pre><h2 id='filename'>filename</h2>
<p>This method will allow you to set the name of the file you are uploading. For the extension of the file, use the wildcard %s.</p>

<blockquote>
<p>Example:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">filename</span><span class="p">(</span><span class="s2">"my_new_file.%s"</span><span class="p">);</span>
</code></pre><h2 id='max_file_size'>max_file_size</h2>
<p>This method allows you to limit the size of file you are uploading.</p>

<blockquote>
<p>Examples:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">max_file_size</span><span class="p">(</span><span class="s2">"1m"</span><span class="p">);</span> <span class="c1">// Limit is 1MB(1048576 Bytes)
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">max_file_size</span><span class="p">(</span><span class="s2">"1.5Megabytes"</span><span class="p">);</span> <span class="c1">// Limit is 1.5MB(1572864 Bytes)
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">max_file_size</span><span class="p">(</span><span class="s2">"1.5MB"</span><span class="p">);</span> <span class="c1">// Limit is 1.5MB(1572864 Bytes)
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">max_file_size</span><span class="p">(</span><span class="s2">"12Gbytes"</span><span class="p">);</span> <span class="c1">// Limit is 12 GB(12884901888 Bytes)
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">max_file_size</span><span class="p">(</span><span class="s2">"1048576"</span><span class="p">);</span> <span class="c1">// Limit is 1MB(1048576 Bytes)
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">max_file_size</span><span class="p">(</span><span class="s2">"1331.2"</span><span class="p">);</span> <span class="c1">// Limit is 1.3KB(1331.2 Bytes)
</span></code></pre><h2 id='upload_function'>upload_function</h2>
<p>This method allows you to use the function that you need to upload files</p>

<blockquote>
<p>Example:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">upload_function</span><span class="p">(</span><span class="s2">"copy"</span><span class="p">);</span> <span class="c1">// Default is move_uploaded_file
</span></code></pre><h2 id='size_format'>size_format</h2>
<p>Converts bytes to units of measurement.</p>

<blockquote>
<p>Example:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">size_format</span><span class="p">(</span><span class="s2">"1"</span><span class="p">);</span> <span class="c1">// return 1B
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">size_format</span><span class="p">(</span><span class="s2">"1024"</span><span class="p">);</span> <span class="c1">// return 1K
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">size_format</span><span class="p">(</span><span class="s2">"1048576"</span><span class="p">);</span> <span class="c1">// return 1M
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">size_format</span><span class="p">(</span><span class="s2">"1073741824"</span><span class="p">);</span> <span class="c1">// return 1G
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">size_format</span><span class="p">(</span><span class="s2">"1099511627776"</span><span class="p">);</span> <span class="c1">// return 1T
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">size_format</span><span class="p">(</span><span class="s2">"1331.2"</span><span class="p">);</span> <span class="c1">// return 1.3K
</span></code></pre><h2 id='size_in_bytes'>size_in_bytes</h2>
<p>Converts measurement units to bytes</p>

<blockquote>
<p>Example:</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">size_in_bytes</span><span class="p">(</span><span class="s2">"1"</span><span class="p">);</span> <span class="c1">// return 1
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">size_in_bytes</span><span class="p">(</span><span class="s2">"1B"</span><span class="p">);</span> <span class="c1">// return 1
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">size_in_bytes</span><span class="p">(</span><span class="s2">"1K"</span><span class="p">);</span> <span class="c1">// return 1024
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">size_in_bytes</span><span class="p">(</span><span class="s2">"1M"</span><span class="p">);</span> <span class="c1">// return 1048576
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">size_in_bytes</span><span class="p">(</span><span class="s2">"1G"</span><span class="p">);</span> <span class="c1">// return 1073741824
</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">upload</span><span class="o">-&gt;</span><span class="na">size_in_bytes</span><span class="p">(</span><span class="s2">"1.56M"</span><span class="p">);</span> <span class="c1">// return 1635778.56
</span></code></pre><h2 id='get_info'>get_info()</h2>
<p>Returns all information about uploading the file.</p>

<blockquote>
<p>Example</p>
</blockquote>
<pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="k">stdClass</span> <span class="nx">Object</span>
<span class="p">(</span>
    <span class="p">[</span><span class="nx">status</span><span class="p">]</span>            <span class="o">=&gt;</span> <span class="kc">false</span>       <span class="c1">// true if successful upload
</span>    <span class="p">[</span><span class="nx">mime</span><span class="p">]</span>              <span class="o">=&gt;</span> <span class="s2">""</span><span class="c1">// File mime type
</span>    <span class="p">[</span><span class="nx">filename</span><span class="p">]</span>          <span class="o">=&gt;</span> <span class="s2">""</span> <span class="c1">// The new filename
</span>    <span class="p">[</span><span class="nx">original</span><span class="p">]</span>          <span class="o">=&gt;</span> <span class="s2">""</span> <span class="c1">// Filename before to save in destination directory
</span>    <span class="p">[</span><span class="nx">size</span><span class="p">]</span>              <span class="o">=&gt;</span> <span class="mi">0</span> <span class="c1">// In bytes
</span>    <span class="p">[</span><span class="nx">size_formated</span><span class="p">]</span>     <span class="o">=&gt;</span> <span class="mi">0</span><span class="nx">B</span> <span class="c1">// In B, K, M and G
</span>    <span class="p">[</span><span class="nx">destination</span><span class="p">]</span>       <span class="o">=&gt;</span> <span class="s2">""</span> <span class="c1">// Default is current dir ( ./ )
</span>    <span class="p">[</span><span class="nx">allowed_mime_types</span><span class="p">]</span><span class="o">=&gt;</span> <span class="nx">Array</span> <span class="p">()</span> <span class="c1">// All allowed mime types
</span>    <span class="p">[</span><span class="nb">log</span><span class="p">]</span>               <span class="o">=&gt;</span> <span class="nx">Array</span> <span class="p">()</span> <span class="c1">// All logs
</span>    <span class="p">[</span><span class="nx">error</span><span class="p">]</span>             <span class="o">=&gt;</span> <span class="mi">0</span> <span class="c1">// File error
</span><span class="p">)</span>
</code></pre><h2 id='status'>status()</h2>
<p>Returns the status of the upload. If the condition is false, then the file has not yet risen, if the state is true, the file upload was performed successfully.</p>
<h2 id='is_dirpath'>is_dirpath</h2>
<p>Validates the directory path &quot;is_dirpath($directory)&quot;</p>
<h2 id='is_filename'>is_filename</h2>
<p>Validates the filename &quot;is_filename($filename)&quot;</p>
<h2 id='allow_overwriting'>allow_overwriting()</h2>
<p>If the file you try to upload already exists, it can not be overwritten unless you enable overwriting using this method.</p>
<h2 id='check_mime_type'>check_mime_type</h2>
<p>Validates the mime type of the file. If you have not enabled any mime type, the validation will return true. &quot;check_mime_type($mime_type)&quot;</p>
<h2 id='clear_allowed_mime_types'>clear_allowed_mime_types()</h2>
<p>Removes all previously enabled mime types.</p>
<h2 id='dir_exists'>dir_exists</h2>
<p>Checks if the directory exists. &quot;dir_exists($directory)&quot;</p>
<h2 id='file_exists'>file_exists</h2>
<p>Checks if the file exists. &quot;file_exists($file)&quot;</p>
<h2 id='save'>save()</h2>
<p>This method loads the file, applies filters and save the file to the set destination.</p>
